{"version":3,"file":"component---src-pages-404-js-5d162183357836694a39.js","mappings":"uLAgEA,EA5De,SAAH,GAAgC,IAA1BA,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAEpBC,EAD6B,MAChBF,EAASG,UAGfC,EAAAA,EAAAA,gBAAe,cAqBHC,kBAkBzB,OACE,uBAAKC,UAAU,iBAAiB,oBAAmBJ,GACjD,0BAAQI,UAAU,iBAChB,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAG,kBAEd,uBAAKF,UAAU,iBACb,4BAAOL,GACP,4DAEE,qBAAGQ,KAAK,+BAKlB,C,yDClDMC,EAAM,SAAH,GAA4C,IAAD,MAArCC,EAAW,EAAXA,YAAaC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAC9BC,GAASX,EAAAA,EAAAA,gBAAe,cAAxBW,KAgBFC,EAAkBL,GAAeI,EAAKE,aAAaN,YACnDO,EAAgC,QAApB,EAAGH,EAAKE,oBAAY,aAAjB,EAAmBH,MAExC,OACE,gBAAC,IAAM,CACLK,eAAgB,CACdP,KAAAA,GAEFE,MAAOA,EACPM,cAAeF,EAAY,QAAWA,EAAiB,KACvDL,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAP,EAAKE,oBAAY,OAAQ,QAAR,EAAjB,EAAmBO,cAAM,WAAR,EAAjB,EAA2BC,UAAO,IAE7C,CACEJ,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,sBACLC,QAASN,GAEX,CACEK,KAAK,2BACLC,QAAS,gDAEXI,OAAOb,IAGf,EAEAH,EAAIiB,aAAe,CACjBf,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K,+DC5EA,UAZqB,SAAH,GAA2B,IAArBiB,EAAI,EAAJA,KAAM5B,EAAQ,EAARA,SACtB6B,EAAYD,EAAKb,KAAKE,aAAaH,MAEzC,OACE,gBAAC,IAAM,CAACd,SAAUA,EAAUc,MAAOe,GACjC,gBAAC,IAAG,CAACf,MAAM,mBACX,4CACA,oFAGN,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport LeftNavigation from \"./lefNavigation\"\r\n\r\nconst Layout = ({ location, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header, sidebar\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query postsByTags {\r\n      allMarkdownRemark(sort: { fields: frontmatter___date, order: ASC }) {\r\n        categories: group(field: frontmatter___tags) {\r\n          name: fieldValue\r\n          posts: edges {\r\n            node {\r\n              frontmatter {\r\n                title\r\n                date\r\n              }\r\n              fields {\r\n                slug\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const postsByTags = data.allMarkdownRemark\r\n\r\n  // if (isRootPath) {\r\n  //   header = (\r\n  //     <h1 className=\"main-heading\">\r\n  //       <Link to=\"/\">{title}</Link>\r\n  //     </h1>\r\n  //   )\r\n  //   sidebar = null\r\n  // } else {\r\n  //   header = (\r\n  //     <Link className=\"header-link-home\" to=\"/\">\r\n  //       {title}\r\n  //     </Link>\r\n  //   )\r\n  //   sidebar = <LeftNavigation data={postsByTags} location={location} />\r\n  // }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">\r\n        <Link to=\"/\">Today I Learn</Link>\r\n      </header>\r\n      <div className=\"contents-wrap\">\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© 2021, COPYRIGHT ALL RIGHT\r\n          <a href=\"https://www.gatsbyjs.com\"></a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, meta, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata?.social?.twitter || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `google-site-verification`,\r\n          content: \"M0Wa_Sh6Ip9woLirwOec9KhuVfJmogHmiDoSA0nZEc0\",\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"404: Not Found\" />\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["location","children","isRootPath","pathname","useStaticQuery","allMarkdownRemark","className","Link","to","href","Seo","description","lang","meta","title","site","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","data","siteTitle"],"sourceRoot":""}