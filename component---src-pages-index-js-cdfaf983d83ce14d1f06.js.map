{"version":3,"file":"component---src-pages-index-js-cdfaf983d83ce14d1f06.js","mappings":"uJAyDA,IA9CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBhB,UAAGD,EAAKE,KAAKC,oBAAb,OAAG,EAAwBC,OAC3B,UAAGJ,EAAKE,KAAKC,oBAAb,OAAG,EAAwBE,OAEvC,OACE,uBAAKC,UAAU,OACb,wC,kFC2FN,UAtHkB,SAAC,GAAwB,IAAD,EAArBN,EAAqB,EAArBA,KAAMO,EAAe,EAAfA,SACnBC,GAAY,UAAAR,EAAKE,KAAKC,oBAAV,eAAwBM,QAAxB,QACZC,EAAQV,EAAKW,kBAAkBC,MAE/BC,EAAeH,EAAMI,QAAO,SAAAC,GAAI,OACpCA,EAAKC,OAAOC,KAAKC,SAAS,gBAEtBC,EAAcT,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAAOC,KAAKC,SAAS,cAC7DE,EAAUV,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAAOC,KAAKC,SAAS,kBAE/D,OAAqB,IAAjBR,EAAMW,OAEN,gBAAC,IAAD,CAAQd,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,oCACA,sBAAIa,MAAO,CAAEC,UAAU,SACpBJ,EAAYK,KAAI,SAAAT,GACf,IAAMN,EAAQM,EAAKU,YAAYhB,OAASM,EAAKC,OAAOC,KAGpD,OAFAS,QAAQC,IAAIZ,GAGV,sBAAIa,IAAKb,EAAKC,OAAOC,MACnB,2BACEX,UAAU,iBACVuB,WAAS,EACTC,SAAS,6BAET,8BACE,yBACE,gBAAC,EAAAC,KAAD,CAAMC,GAAE,GAAKjB,EAAKC,OAAOC,KAAQgB,SAAS,OACxC,wBAAMA,SAAS,YAAYxB,KAG/B,6BAAQM,EAAKU,YAAYS,aAerC,wCACA,sBAAIZ,MAAO,CAAEC,UAAU,SACpBV,EAAaW,KAAI,SAAAT,GAChB,IAAMN,EAAQM,EAAKU,YAAYhB,OAASM,EAAKC,OAAOC,KAGpD,OAFAS,QAAQC,IAAIZ,GAGV,sBAAIa,IAAKb,EAAKC,OAAOC,MACnB,2BACEX,UAAU,iBACVuB,WAAS,EACTC,SAAS,6BAET,8BACE,yBACE,gBAAC,EAAAC,KAAD,CAAMC,GAAE,GAAKjB,EAAKC,OAAOC,KAAQgB,SAAS,OACxC,wBAAMA,SAAS,YAAYxB,KAG/B,6BAAQM,EAAKU,YAAYS,aAOrC,wCACA,sBAAIZ,MAAO,CAAEC,UAAU,SACpBH,EAAQI,KAAI,SAAAT,GACX,IAAMN,EAAQM,EAAKU,YAAYhB,OAASM,EAAKC,OAAOC,KAGpD,OAFAS,QAAQC,IAAIZ,GAGV,sBAAIa,IAAKb,EAAKC,OAAOC,MACnB,2BACEX,UAAU,iBACVuB,WAAS,EACTC,SAAS,6BAET,8BACE,yBACE,gBAAC,EAAAC,KAAD,CAAMC,GAAE,GAAKjB,EAAKC,OAAOC,KAAQgB,SAAS,OACxC,wBAAMA,SAAS,YAAYxB,KAG/B,6BAAQM,EAAKU,YAAYS","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <p>무엇이든 꾸준히</p>\n      {/* <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )} */}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  const bugListPosts = posts.filter(post =>\n    post.fields.slug.includes(\"/bugLists\")\n  )\n  const reviewPosts = posts.filter(post => post.fields.slug.includes(\"/review\"))\n  const jsPosts = posts.filter(post => post.fields.slug.includes(\"/javascript\"))\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <h2>Review</h2>\n      <ol style={{ listStyle: `none` }}>\n        {reviewPosts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          console.log(post)\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <p>\n                    <Link to={`${post.fields.slug}`} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </p>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                {/* <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section> */}\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <h2>Bug Report</h2>\n      <ol style={{ listStyle: `none` }}>\n        {bugListPosts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          console.log(post)\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <p>\n                    <Link to={`${post.fields.slug}`} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </p>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <h2>Javascript</h2>\n      <ol style={{ listStyle: `none` }}>\n        {jsPosts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          console.log(post)\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <p>\n                    <Link to={`${post.fields.slug}`} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </p>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","site","siteMetadata","author","social","className","location","siteTitle","title","posts","allMarkdownRemark","nodes","bugListPosts","filter","post","fields","slug","includes","reviewPosts","jsPosts","length","style","listStyle","map","frontmatter","console","log","key","itemScope","itemType","Link","to","itemProp","date"],"sourceRoot":""}