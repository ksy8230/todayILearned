{"version":3,"file":"component---src-templates-blog-post-js-aae1bba3473de9ed7273.js","mappings":"uJAyDA,IA9CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBhB,UAAGD,EAAKE,KAAKC,oBAAb,OAAG,EAAwBC,OAC3B,UAAGJ,EAAKE,KAAKC,oBAAb,OAAG,EAAwBE,OAEvC,OACE,uBAAKC,UAAU,OACb,wC,4FCuCN,UAjEyB,SAAC,GAAwB,IAAD,EAArBN,EAAqB,EAArBA,KAAMO,EAAe,EAAfA,SAC1BC,EAAOR,EAAKS,eACZC,GAAY,UAAAV,EAAKE,KAAKC,oBAAV,eAAwBQ,QAAxB,QACVC,EAAmBZ,EAAnBY,SAAUC,EAASb,EAATa,KAEZC,EAAcd,EAAKc,YAKzB,OAHAC,QAAQC,IAAIR,GACZO,QAAQC,IAAIF,GAGV,gCACE,gBAAC,IAAD,CAAgBd,KAAMc,IACtB,gBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKS,YAAYN,MACxBO,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UAEpD,2BACEb,UAAU,YACVc,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYd,EAAKS,YAAYN,OAC1C,yBAAIH,EAAKS,YAAYM,OAGvB,2BACEC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEX,4BAEF,uBAAKhB,UAAU,iBACb,sBACEqB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGpB,GACC,gBAAC,EAAAqB,KAAD,CAAMC,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAApC,KACKzB,EAASK,YAAYN,QAI9B,0BACGE,GACC,gBAAC,EAAAoB,KAAD,CAAMC,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKI,YAAYN,MADpB","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <p>무엇이든 꾸준히</p>\r\n      {/* <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a>\r\n        </p>\r\n      )} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport LeftNavigation from \"../components/lefNavigation\"\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  const postsByTags = data.postsByTags\r\n\r\n  console.log(post)\r\n  console.log(postsByTags)\r\n\r\n  return (\r\n    <>\r\n      <LeftNavigation data={postsByTags} />\r\n      <Layout location={location} title={siteTitle}>\r\n        <Seo\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.description || post.excerpt}\r\n        />\r\n        <article\r\n          className=\"blog-post\"\r\n          itemScope\r\n          itemType=\"http://schema.org/Article\"\r\n        >\r\n          <header>\r\n            <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n            <p>{post.frontmatter.date}</p>\r\n          </header>\r\n\r\n          <section\r\n            dangerouslySetInnerHTML={{ __html: post.html }}\r\n            itemProp=\"articleBody\"\r\n          />\r\n          <hr />\r\n        </article>\r\n        <nav className=\"blog-post-nav\">\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              {previous && (\r\n                <Link to={previous.fields.slug} rel=\"prev\">\r\n                  ← {previous.frontmatter.title}\r\n                </Link>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {next && (\r\n                <Link to={next.fields.slug} rel=\"next\">\r\n                  {next.frontmatter.title} →\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        tags\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    postsByTags: allMarkdownRemark {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        nodes {\r\n          frontmatter {\r\n            title\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","site","siteMetadata","author","social","className","location","post","markdownRemark","siteTitle","title","previous","next","postsByTags","console","log","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}