{"version":3,"file":"component---src-pages-index-js-64cc0126230c7f3c13a1.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/common-tags/es/TemplateTag/TemplateTag.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/inlineArrayTransformer/inlineArrayTransformer.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/stripIndentTransformer/stripIndentTransformer.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/trimResultTransformer/trimResultTransformer.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/splitStringTransformer/splitStringTransformer.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/commaLists/commaLists.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/commaListsAnd/commaListsAnd.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/commaListsOr/commaListsOr.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/removeNonPrintingValuesTransformer/removeNonPrintingValuesTransformer.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/replaceSubstitutionTransformer/replaceSubstitutionTransformer.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/html/html.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/replaceResultTransformer/replaceResultTransformer.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/safeHtml/safeHtml.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/oneLine/oneLine.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/oneLineTrim/oneLineTrim.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/oneLineCommaLists/oneLineCommaLists.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/oneLineCommaListsOr/oneLineCommaListsOr.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/oneLineCommaListsAnd/oneLineCommaListsAnd.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/inlineLists/inlineLists.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/oneLineInlineLists/oneLineInlineLists.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/stripIndent/stripIndent.js","webpack://gatsby-starter-blog/./node_modules/common-tags/es/stripIndents/stripIndents.js","webpack://gatsby-starter-blog/./node_modules/gatsby-image/index.js","webpack://gatsby-starter-blog/../src/image-utils.ts","webpack://gatsby-starter-blog/../src/components/hooks.ts","webpack://gatsby-starter-blog/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-blog/../src/components/picture.tsx","webpack://gatsby-starter-blog/../src/components/placeholder.tsx","webpack://gatsby-starter-blog/../src/components/main-image.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-blog/../src/components/static-image.server.tsx","webpack://gatsby-starter-blog/../src/components/static-image.tsx","webpack://gatsby-starter-blog/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/home.module.css","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _templateObject = _taggedTemplateLiteral(['', ''], ['', '']);\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * @class TemplateTag\n * @classdesc Consumes a pipeline of composable transformer plugins and produces a template tag.\n */\n\n\nvar TemplateTag = function () {\n  /**\n   * constructs a template tag\n   * @constructs TemplateTag\n   * @param  {...Object} [...transformers] - an array or arguments list of transformers\n   * @return {Function}                    - a template tag\n   */\n  function TemplateTag() {\n    var _this = this;\n\n    for (var _len = arguments.length, transformers = Array(_len), _key = 0; _key < _len; _key++) {\n      transformers[_key] = arguments[_key];\n    }\n\n    _classCallCheck(this, TemplateTag);\n\n    this.tag = function (strings) {\n      for (var _len2 = arguments.length, expressions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        expressions[_key2 - 1] = arguments[_key2];\n      }\n\n      if (typeof strings === 'function') {\n        // if the first argument passed is a function, assume it is a template tag and return\n        // an intermediary tag that processes the template using the aforementioned tag, passing the\n        // result to our tag\n        return _this.interimTag.bind(_this, strings);\n      }\n\n      if (typeof strings === 'string') {\n        // if the first argument passed is a string, just transform it\n        return _this.transformEndResult(strings);\n      } // else, return a transformed end result of processing the template with our tag\n\n\n      strings = strings.map(_this.transformString.bind(_this));\n      return _this.transformEndResult(strings.reduce(_this.processSubstitutions.bind(_this, expressions)));\n    }; // if first argument is an array, extrude it as a list of transformers\n\n\n    if (transformers.length > 0 && Array.isArray(transformers[0])) {\n      transformers = transformers[0];\n    } // if any transformers are functions, this means they are not initiated - automatically initiate them\n\n\n    this.transformers = transformers.map(function (transformer) {\n      return typeof transformer === 'function' ? transformer() : transformer;\n    }); // return an ES2015 template tag\n\n    return this.tag;\n  }\n  /**\n   * Applies all transformers to a template literal tagged with this method.\n   * If a function is passed as the first argument, assumes the function is a template tag\n   * and applies it to the template, returning a template tag.\n   * @param  {(Function|String|Array<String>)} strings        - Either a template tag or an array containing template strings separated by identifier\n   * @param  {...*}                            ...expressions - Optional list of substitution values.\n   * @return {(String|Function)}                              - Either an intermediary tag function or the results of processing the template.\n   */\n\n\n  _createClass(TemplateTag, [{\n    key: 'interimTag',\n\n    /**\n     * An intermediary template tag that receives a template tag and passes the result of calling the template with the received\n     * template tag to our own template tag.\n     * @param  {Function}        nextTag          - the received template tag\n     * @param  {Array<String>}   template         - the template to process\n     * @param  {...*}            ...substitutions - `substitutions` is an array of all substitutions in the template\n     * @return {*}                                - the final processed value\n     */\n    value: function interimTag(previousTag, template) {\n      for (var _len3 = arguments.length, substitutions = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        substitutions[_key3 - 2] = arguments[_key3];\n      }\n\n      return this.tag(_templateObject, previousTag.apply(undefined, [template].concat(substitutions)));\n    }\n    /**\n     * Performs bulk processing on the tagged template, transforming each substitution and then\n     * concatenating the resulting values into a string.\n     * @param  {Array<*>} substitutions - an array of all remaining substitutions present in this template\n     * @param  {String}   resultSoFar   - this iteration's result string so far\n     * @param  {String}   remainingPart - the template chunk after the current substitution\n     * @return {String}                 - the result of joining this iteration's processed substitution with the result\n     */\n\n  }, {\n    key: 'processSubstitutions',\n    value: function processSubstitutions(substitutions, resultSoFar, remainingPart) {\n      var substitution = this.transformSubstitution(substitutions.shift(), resultSoFar);\n      return ''.concat(resultSoFar, substitution, remainingPart);\n    }\n    /**\n     * Iterate through each transformer, applying the transformer's `onString` method to the template\n     * strings before all substitutions are processed.\n     * @param {String}  str - The input string\n     * @return {String}     - The final results of processing each transformer\n     */\n\n  }, {\n    key: 'transformString',\n    value: function transformString(str) {\n      var cb = function cb(res, transform) {\n        return transform.onString ? transform.onString(res) : res;\n      };\n\n      return this.transformers.reduce(cb, str);\n    }\n    /**\n     * When a substitution is encountered, iterates through each transformer and applies the transformer's\n     * `onSubstitution` method to the substitution.\n     * @param  {*}      substitution - The current substitution\n     * @param  {String} resultSoFar  - The result up to and excluding this substitution.\n     * @return {*}                   - The final result of applying all substitution transformations.\n     */\n\n  }, {\n    key: 'transformSubstitution',\n    value: function transformSubstitution(substitution, resultSoFar) {\n      var cb = function cb(res, transform) {\n        return transform.onSubstitution ? transform.onSubstitution(res, resultSoFar) : res;\n      };\n\n      return this.transformers.reduce(cb, substitution);\n    }\n    /**\n     * Iterates through each transformer, applying the transformer's `onEndResult` method to the\n     * template literal after all substitutions have finished processing.\n     * @param  {String} endResult - The processed template, just before it is returned from the tag\n     * @return {String}           - The final results of processing each transformer\n     */\n\n  }, {\n    key: 'transformEndResult',\n    value: function transformEndResult(endResult) {\n      var cb = function cb(res, transform) {\n        return transform.onEndResult ? transform.onEndResult(res) : res;\n      };\n\n      return this.transformers.reduce(cb, endResult);\n    }\n  }]);\n\n  return TemplateTag;\n}();\n\nexport default TemplateTag;","var defaults = {\n  separator: '',\n  conjunction: '',\n  serial: false\n};\n/**\n * Converts an array substitution to a string containing a list\n * @param  {String} [opts.separator = ''] - the character that separates each item\n * @param  {String} [opts.conjunction = '']  - replace the last separator with this\n * @param  {Boolean} [opts.serial = false] - include the separator before the conjunction? (Oxford comma use-case)\n *\n * @return {Object}                     - a TemplateTag transformer\n */\n\nvar inlineArrayTransformer = function inlineArrayTransformer() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults;\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      // only operate on arrays\n      if (Array.isArray(substitution)) {\n        var arrayLength = substitution.length;\n        var separator = opts.separator;\n        var conjunction = opts.conjunction;\n        var serial = opts.serial; // join each item in the array into a string where each item is separated by separator\n        // be sure to maintain indentation\n\n        var indent = resultSoFar.match(/(\\n?[^\\S\\n]+)$/);\n\n        if (indent) {\n          substitution = substitution.join(separator + indent[1]);\n        } else {\n          substitution = substitution.join(separator + ' ');\n        } // if conjunction is set, replace the last separator with conjunction, but only if there is more than one substitution\n\n\n        if (conjunction && arrayLength > 1) {\n          var separatorIndex = substitution.lastIndexOf(separator);\n          substitution = substitution.slice(0, separatorIndex) + (serial ? separator : '') + ' ' + conjunction + substitution.slice(separatorIndex + 1);\n        }\n      }\n\n      return substitution;\n    }\n  };\n};\n\nexport default inlineArrayTransformer;","function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n/**\n * strips indentation from a template literal\n * @param  {String} type = 'initial' - whether to remove all indentation or just leading indentation. can be 'all' or 'initial'\n * @return {Object}                  - a TemplateTag transformer\n */\n\n\nvar stripIndentTransformer = function stripIndentTransformer() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'initial';\n  return {\n    onEndResult: function onEndResult(endResult) {\n      if (type === 'initial') {\n        // remove the shortest leading indentation from each line\n        var match = endResult.match(/^[^\\S\\n]*(?=\\S)/gm);\n        var indent = match && Math.min.apply(Math, _toConsumableArray(match.map(function (el) {\n          return el.length;\n        })));\n\n        if (indent) {\n          var regexp = new RegExp('^.{' + indent + '}', 'gm');\n          return endResult.replace(regexp, '');\n        }\n\n        return endResult;\n      }\n\n      if (type === 'all') {\n        // remove all indentation from each line\n        return endResult.replace(/^[^\\S\\n]+/gm, '');\n      }\n\n      throw new Error('Unknown type: ' + type);\n    }\n  };\n};\n\nexport default stripIndentTransformer;","/**\n * TemplateTag transformer that trims whitespace on the end result of a tagged template\n * @param  {String} side = '' - The side of the string to trim. Can be 'start' or 'end' (alternatively 'left' or 'right')\n * @return {Object}           - a TemplateTag transformer\n */\nvar trimResultTransformer = function trimResultTransformer() {\n  var side = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return {\n    onEndResult: function onEndResult(endResult) {\n      if (side === '') {\n        return endResult.trim();\n      }\n\n      side = side.toLowerCase();\n\n      if (side === 'start' || side === 'left') {\n        return endResult.replace(/^\\s*/, '');\n      }\n\n      if (side === 'end' || side === 'right') {\n        return endResult.replace(/\\s*$/, '');\n      }\n\n      throw new Error('Side not supported: ' + side);\n    }\n  };\n};\n\nexport default trimResultTransformer;","var splitStringTransformer = function splitStringTransformer(splitBy) {\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      if (splitBy != null && typeof splitBy === 'string') {\n        if (typeof substitution === 'string' && substitution.includes(splitBy)) {\n          substitution = substitution.split(splitBy);\n        }\n      } else {\n        throw new Error('You need to specify a string character to split by.');\n      }\n\n      return substitution;\n    }\n  };\n};\n\nexport default splitStringTransformer;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar commaLists = new TemplateTag(inlineArrayTransformer({\n  separator: ','\n}), stripIndentTransformer, trimResultTransformer);\nexport default commaLists;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar commaListsAnd = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'and'\n}), stripIndentTransformer, trimResultTransformer);\nexport default commaListsAnd;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar commaListsOr = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'or'\n}), stripIndentTransformer, trimResultTransformer);\nexport default commaListsOr;","var isValidValue = function isValidValue(x) {\n  return x != null && !Number.isNaN(x) && typeof x !== 'boolean';\n};\n\nvar removeNonPrintingValuesTransformer = function removeNonPrintingValuesTransformer() {\n  return {\n    onSubstitution: function onSubstitution(substitution) {\n      if (Array.isArray(substitution)) {\n        return substitution.filter(isValidValue);\n      }\n\n      if (isValidValue(substitution)) {\n        return substitution;\n      }\n\n      return '';\n    }\n  };\n};\n\nexport default removeNonPrintingValuesTransformer;","var replaceSubstitutionTransformer = function replaceSubstitutionTransformer(replaceWhat, replaceWith) {\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      if (replaceWhat == null || replaceWith == null) {\n        throw new Error('replaceSubstitutionTransformer requires at least 2 arguments.');\n      } // Do not touch if null or undefined\n\n\n      if (substitution == null) {\n        return substitution;\n      } else {\n        return substitution.toString().replace(replaceWhat, replaceWith);\n      }\n    }\n  };\n};\n\nexport default replaceSubstitutionTransformer;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport splitStringTransformer from '../splitStringTransformer';\nimport removeNonPrintingValuesTransformer from '../removeNonPrintingValuesTransformer';\nvar html = new TemplateTag(splitStringTransformer('\\n'), removeNonPrintingValuesTransformer, inlineArrayTransformer, stripIndentTransformer, trimResultTransformer);\nexport default html;","/**\n * Replaces tabs, newlines and spaces with the chosen value when they occur in sequences\n * @param  {(String|RegExp)} replaceWhat - the value or pattern that should be replaced\n * @param  {*}               replaceWith - the replacement value\n * @return {Object}                      - a TemplateTag transformer\n */\nvar replaceResultTransformer = function replaceResultTransformer(replaceWhat, replaceWith) {\n  return {\n    onEndResult: function onEndResult(endResult) {\n      if (replaceWhat == null || replaceWith == null) {\n        throw new Error('replaceResultTransformer requires at least 2 arguments.');\n      }\n\n      return endResult.replace(replaceWhat, replaceWith);\n    }\n  };\n};\n\nexport default replaceResultTransformer;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport splitStringTransformer from '../splitStringTransformer';\nimport replaceSubstitutionTransformer from '../replaceSubstitutionTransformer';\nvar safeHtml = new TemplateTag(splitStringTransformer('\\n'), inlineArrayTransformer, stripIndentTransformer, trimResultTransformer, replaceSubstitutionTransformer(/&/g, '&amp;'), replaceSubstitutionTransformer(/</g, '&lt;'), replaceSubstitutionTransformer(/>/g, '&gt;'), replaceSubstitutionTransformer(/\"/g, '&quot;'), replaceSubstitutionTransformer(/'/g, '&#x27;'), replaceSubstitutionTransformer(/`/g, '&#x60;'));\nexport default safeHtml;","import TemplateTag from '../TemplateTag';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLine = new TemplateTag(replaceResultTransformer(/(?:\\n(?:\\s*))+/g, ' '), trimResultTransformer);\nexport default oneLine;","import TemplateTag from '../TemplateTag';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineTrim = new TemplateTag(replaceResultTransformer(/(?:\\n\\s*)/g, ''), trimResultTransformer);\nexport default oneLineTrim;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineCommaLists = new TemplateTag(inlineArrayTransformer({\n  separator: ','\n}), replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineCommaLists;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineCommaListsOr = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'or'\n}), replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineCommaListsOr;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineCommaListsAnd = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'and'\n}), replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineCommaListsAnd;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar inlineLists = new TemplateTag(inlineArrayTransformer, stripIndentTransformer, trimResultTransformer);\nexport default inlineLists;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineInlineLists = new TemplateTag(inlineArrayTransformer, replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineInlineLists;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar stripIndent = new TemplateTag(stripIndentTransformer, trimResultTransformer);\nexport default stripIndent;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar stripIndents = new TemplateTag(stripIndentTransformer('all'), trimResultTransformer);\nexport default stripIndents;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _excluded = [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\", \"loading\", \"draggable\", \"ariaHidden\"];\n\nvar logDeprecationNotice = function logDeprecationNotice(prop, replacement) {\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  console.log(\"\\n    The \\\"\" + prop + \"\\\" prop is now deprecated and will be removed in the next major version\\n    of \\\"gatsby-image\\\".\\n    \");\n\n  if (replacement) {\n    console.log(\"Please use \" + replacement + \" instead of \\\"\" + prop + \"\\\".\");\n  }\n}; // Handle legacy props during their deprecation phase\n\n\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n  var resolutions = convertedProps.resolutions,\n      sizes = convertedProps.sizes,\n      critical = convertedProps.critical;\n\n  if (resolutions) {\n    convertedProps.fixed = resolutions;\n    logDeprecationNotice(\"resolutions\", \"the gatsby-image v2 prop \\\"fixed\\\"\");\n    delete convertedProps.resolutions;\n  }\n\n  if (sizes) {\n    convertedProps.fluid = sizes;\n    logDeprecationNotice(\"sizes\", \"the gatsby-image v2 prop \\\"fluid\\\"\");\n    delete convertedProps.sizes;\n  }\n\n  if (critical) {\n    logDeprecationNotice(\"critical\", \"the native \\\"loading\\\" attribute\");\n    convertedProps.loading = \"eager\";\n  } // convert fluid & fixed to arrays so we only have to work with arrays\n\n\n  if (convertedProps.fluid) {\n    convertedProps.fluid = groupByMedia([].concat(convertedProps.fluid));\n  }\n\n  if (convertedProps.fixed) {\n    convertedProps.fixed = groupByMedia([].concat(convertedProps.fixed));\n  }\n\n  return convertedProps;\n};\n/**\n * Checks if fluid or fixed are art-direction arrays.\n *\n * @param currentData  {{media?: string}[]}   The props to check for images.\n * @return {boolean}\n */\n\n\nvar hasArtDirectionSupport = function hasArtDirectionSupport(currentData) {\n  return !!currentData && Array.isArray(currentData) && currentData.some(function (image) {\n    return typeof image.media !== \"undefined\";\n  });\n};\n/**\n * Tries to detect if a media query matches the current viewport.\n * @property media   {{media?: string}}  A media query string.\n * @return {boolean}\n */\n\n\nvar matchesMedia = function matchesMedia(_ref) {\n  var media = _ref.media;\n  return media ? isBrowser && !!window.matchMedia(media).matches : false;\n};\n/**\n * Find the source of an image to use as a key in the image cache.\n * Use `the first image in either `fixed` or `fluid`\n * @param {{fluid: {src: string, media?: string}[], fixed: {src: string, media?: string}[]}} args\n * @return {string?} Returns image src or undefined it not given.\n */\n\n\nvar getImageCacheKey = function getImageCacheKey(_ref2) {\n  var fluid = _ref2.fluid,\n      fixed = _ref2.fixed;\n  var srcData = getCurrentSrcData(fluid || fixed || []);\n  return srcData && srcData.src;\n};\n/**\n * Returns the current src - Preferably with art-direction support.\n * @param currentData  {{media?: string}[], maxWidth?: Number, maxHeight?: Number}   The fluid or fixed image array.\n * @return {{src: string, media?: string, maxWidth?: Number, maxHeight?: Number}}\n */\n\n\nvar getCurrentSrcData = function getCurrentSrcData(currentData) {\n  if (isBrowser && hasArtDirectionSupport(currentData)) {\n    // Do we have an image for the current Viewport?\n    var foundMedia = currentData.findIndex(matchesMedia);\n\n    if (foundMedia !== -1) {\n      return currentData[foundMedia];\n    } // No media matches, select first element without a media condition\n\n\n    var noMedia = currentData.findIndex(function (image) {\n      return typeof image.media === \"undefined\";\n    });\n\n    if (noMedia !== -1) {\n      return currentData[noMedia];\n    }\n  } // Else return the first image.\n\n\n  return currentData[0];\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = Object.create({});\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props);\n  var cacheKey = getImageCacheKey(convertedProps);\n  return imageCache[cacheKey] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props);\n  var cacheKey = getImageCacheKey(convertedProps);\n\n  if (cacheKey) {\n    imageCache[cacheKey] = true;\n  }\n}; // Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\n\n\nvar hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nvar isBrowser = typeof window !== \"undefined\";\nvar hasIOSupport = isBrowser && window.IntersectionObserver;\nvar io;\nvar listeners = new WeakMap();\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (listeners.has(entry.target)) {\n          var cb = listeners.get(entry.target); // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n\n          if (entry.isIntersecting || entry.intersectionRatio > 0) {\n            io.unobserve(entry.target);\n            listeners.delete(entry.target);\n            cb();\n          }\n        }\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nfunction generateImageSources(imageVariants) {\n  return imageVariants.map(function (_ref3) {\n    var src = _ref3.src,\n        srcSet = _ref3.srcSet,\n        srcSetWebp = _ref3.srcSetWebp,\n        media = _ref3.media,\n        sizes = _ref3.sizes;\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {\n      key: src\n    }, srcSetWebp && /*#__PURE__*/_react.default.createElement(\"source\", {\n      type: \"image/webp\",\n      media: media,\n      srcSet: srcSetWebp,\n      sizes: sizes\n    }), srcSet && /*#__PURE__*/_react.default.createElement(\"source\", {\n      media: media,\n      srcSet: srcSet,\n      sizes: sizes\n    }));\n  });\n} // Return an array ordered by elements having a media prop, does not use\n// native sort, as a stable sort is not guaranteed by all browsers/versions\n\n\nfunction groupByMedia(imageVariants) {\n  var withMedia = [];\n  var without = [];\n  imageVariants.forEach(function (variant) {\n    return (variant.media ? withMedia : without).push(variant);\n  });\n\n  if (without.length > 1 && process.env.NODE_ENV !== \"production\") {\n    console.warn(\"We've found \" + without.length + \" sources without a media property. They might be ignored by the browser, see: https://www.gatsbyjs.org/packages/gatsby-image/#art-directing-multiple-images\");\n  }\n\n  return [].concat(withMedia, without);\n}\n\nfunction generateTracedSVGSources(imageVariants) {\n  return imageVariants.map(function (_ref4) {\n    var src = _ref4.src,\n        media = _ref4.media,\n        tracedSVG = _ref4.tracedSVG;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: tracedSVG\n    });\n  });\n}\n\nfunction generateBase64Sources(imageVariants) {\n  return imageVariants.map(function (_ref5) {\n    var src = _ref5.src,\n        media = _ref5.media,\n        base64 = _ref5.base64;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: base64\n    });\n  });\n}\n\nfunction generateNoscriptSource(_ref6, isWebp) {\n  var srcSet = _ref6.srcSet,\n      srcSetWebp = _ref6.srcSetWebp,\n      media = _ref6.media,\n      sizes = _ref6.sizes;\n  var src = isWebp ? srcSetWebp : srcSet;\n  var mediaAttr = media ? \"media=\\\"\" + media + \"\\\" \" : \"\";\n  var typeAttr = isWebp ? \"type='image/webp' \" : \"\";\n  var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\" \" : \"\";\n  return \"<source \" + typeAttr + mediaAttr + \"srcset=\\\"\" + src + \"\\\" \" + sizesAttr + \"/>\";\n}\n\nfunction generateNoscriptSources(imageVariants) {\n  return imageVariants.map(function (variant) {\n    return (variant.srcSetWebp ? generateNoscriptSource(variant, true) : \"\") + generateNoscriptSource(variant);\n  }).join(\"\");\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getIO();\n\n  if (observer) {\n    observer.observe(el);\n    listeners.set(el, cb);\n  }\n\n  return function () {\n    observer.unobserve(el);\n    listeners.delete(el);\n  };\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var crossOrigin = props.crossOrigin ? \"crossorigin=\\\"\" + props.crossOrigin + \"\\\" \" : \"\";\n  var loading = props.loading ? \"loading=\\\"\" + props.loading + \"\\\" \" : \"\";\n  var draggable = props.draggable ? \"draggable=\\\"\" + props.draggable + \"\\\" \" : \"\";\n  var sources = generateNoscriptSources(props.imageVariants);\n  return \"<picture>\" + sources + \"<img \" + loading + width + height + sizes + srcSet + src + alt + title + crossOrigin + draggable + \"style=\\\"position:absolute;top:0;left:0;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n}; // Earlier versions of gatsby-image during the 2.x cycle did not wrap\n// the `Img` component in a `picture` element. This maintains compatibility\n// until a breaking change can be introduced in the next major release\n\n\nvar Placeholder = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var src = props.src,\n      imageVariants = props.imageVariants,\n      generateSources = props.generateSources,\n      spreadProps = props.spreadProps,\n      ariaHidden = props.ariaHidden;\n\n  var baseImage = /*#__PURE__*/_react.default.createElement(Img, (0, _extends2.default)({\n    ref: ref,\n    src: src\n  }, spreadProps, {\n    ariaHidden: ariaHidden\n  }));\n\n  return imageVariants.length > 1 ? /*#__PURE__*/_react.default.createElement(\"picture\", null, generateSources(imageVariants), baseImage) : baseImage;\n});\n\nvar Img = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      loading = props.loading,\n      draggable = props.draggable,\n      ariaHidden = props.ariaHidden,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  return /*#__PURE__*/_react.default.createElement(\"img\", (0, _extends2.default)({\n    \"aria-hidden\": ariaHidden,\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref,\n    loading: loading,\n    draggable: draggable,\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    _this.seenBefore = isBrowser && inImageCache(props);\n    _this.isCritical = props.loading === \"eager\" || props.critical;\n    _this.addNoScript = !(_this.isCritical && !props.fadeIn);\n    _this.useIOSupport = !hasNativeLazyLoadSupport && hasIOSupport && !_this.isCritical && !_this.seenBefore;\n    var isVisible = _this.isCritical || isBrowser && (hasNativeLazyLoadSupport || !_this.useIOSupport);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: false,\n      imgCached: false,\n      fadeIn: !_this.seenBefore && props.fadeIn,\n      isHydrated: false\n    };\n    _this.imageRef = /*#__PURE__*/_react.default.createRef();\n    _this.placeholderRef = props.placeholderRef || /*#__PURE__*/_react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setState({\n      isHydrated: isBrowser\n    });\n\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.isCritical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.cleanUpListeners) {\n      this.cleanUpListeners();\n    }\n  } // Specific to IntersectionObserver based lazy-load support\n  ;\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.useIOSupport && ref) {\n      this.cleanUpListeners = listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        } // imgCached and imgLoaded must update after isVisible,\n        // Once isVisible is true, imageRef becomes accessible, which imgCached needs access to.\n        // imgLoaded and imgCached are in a 2nd setState call to be changed together,\n        // avoiding initiating unnecessary animation frames from style changes.\n\n\n        _this2.setState({\n          isVisible: true\n        }, function () {\n          _this2.setState({\n            imgLoaded: imageInCache,\n            // `currentSrc` should be a string, but can be `undefined` in IE,\n            // !! operator validates the value is not undefined/null/\"\"\n            // for lazyloaded components this might be null\n            // TODO fix imgCached behaviour as it's now false when it's lazyloaded\n            imgCached: !!(_this2.imageRef.current && _this2.imageRef.current.currentSrc)\n          });\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        durationFadeIn = _convertProps.durationFadeIn,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp,\n        loading = _convertProps.loading,\n        draggable = _convertProps.draggable;\n\n    var imageVariants = fluid || fixed; // Abort early if missing image data (#25371)\n\n    if (!imageVariants) {\n      return null;\n    }\n\n    var shouldReveal = this.state.fadeIn === false || this.state.imgLoaded;\n    var shouldFadeIn = this.state.fadeIn === true && !this.state.imgCached;\n    var imageStyle = (0, _extends2.default)({\n      opacity: shouldReveal ? 1 : 0,\n      transition: shouldFadeIn ? \"opacity \" + durationFadeIn + \"ms\" : \"none\"\n    }, imgStyle);\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var delayHideStyle = {\n      transitionDelay: durationFadeIn + \"ms\"\n    };\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1\n    }, shouldFadeIn && delayHideStyle, imgStyle, placeholderStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName,\n      itemProp: itemProp\n    }; // Initial client render state needs to match SSR until hydration finishes.\n    // Once hydration completes, render again to update to the correct image.\n    // `imageVariants` is always an Array type at this point due to `convertProps()`\n\n    var image = !this.state.isHydrated ? imageVariants[0] : getCurrentSrcData(imageVariants);\n\n    if (fluid) {\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\",\n          maxWidth: image.maxWidth ? image.maxWidth + \"px\" : null,\n          maxHeight: image.maxHeight ? image.maxHeight + \"px\" : null\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          right: 0,\n          left: 0\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateBase64Sources\n      }), image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image, {\n            imageVariants: imageVariants\n          }))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: image.width,\n        height: image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(image.srcSet)\n      }, bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          width: image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          height: image.height\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateBase64Sources\n      }), image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: image.width,\n        height: image.height,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image, {\n            imageVariants: imageVariants\n          }))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  fadeIn: true,\n  durationFadeIn: 500,\n  alt: \"\",\n  Tag: \"div\",\n  // We set it to `lazy` by default because it's best to default to a performant\n  // setting and let the user \"opt out\" to `eager`\n  loading: \"lazy\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string,\n  maxWidth: _propTypes.default.number,\n  maxHeight: _propTypes.default.number\n});\n\nfunction requireFixedOrFluid(originalPropTypes) {\n  return function (props, propName, componentName) {\n    var _PropTypes$checkPropT;\n\n    if (!props.fixed && !props.fluid) {\n      throw new Error(\"The prop `fluid` or `fixed` is marked as required in `\" + componentName + \"`, but their values are both `undefined`.\");\n    }\n\n    _propTypes.default.checkPropTypes((_PropTypes$checkPropT = {}, _PropTypes$checkPropT[propName] = originalPropTypes, _PropTypes$checkPropT), props, \"prop\", componentName);\n  };\n} // If you modify these propTypes, please don't forget to update following files as well:\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/index.d.ts\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/README.md#gatsby-image-props\n// https://github.com/gatsbyjs/gatsby/blob/master/docs/docs/gatsby-image.md#gatsby-image-props\n\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: requireFixedOrFluid(_propTypes.default.oneOfType([fixedObject, _propTypes.default.arrayOf(fixedObject)])),\n  fluid: requireFixedOrFluid(_propTypes.default.oneOfType([fluidObject, _propTypes.default.arrayOf(fluidObject)])),\n  fadeIn: _propTypes.default.bool,\n  durationFadeIn: _propTypes.default.number,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  crossOrigin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string,\n  loading: _propTypes.default.oneOf([\"auto\", \"lazy\", \"eager\"]),\n  draggable: _propTypes.default.bool\n};\nvar _default = Image;\nexports.default = _default;","/* eslint-disable no-unused-expressions */\nimport { stripIndent } from \"common-tags\"\nimport camelCase from \"camelcase\"\nimport { IGatsbyImageData } from \".\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.substr(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(stripIndent`\n    The requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport {\n  useState,\n  CSSProperties,\n  useEffect,\n  HTMLAttributes,\n  ImgHTMLAttributes,\n  ReactEventHandler,\n  SetStateAction,\n  Dispatch,\n  RefObject,\n} from \"react\"\nimport { Node } from \"gatsby\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport {\n  IGatsbyImageHelperArgs,\n  generateImageData,\n  Layout,\n  EVERY_BREAKPOINT,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\nconst imageCache = new Set<string>()\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport function storeImageloaded(cacheKey?: string): void {\n  if (cacheKey) {\n    imageCache.add(cacheKey)\n  }\n}\n\nexport function hasImageLoaded(cacheKey: string): boolean {\n  return imageCache.has(cacheKey)\n}\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nexport type ImageDataLike = FileNode | IGatsbyImageDataParent | IGatsbyImageData\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport async function applyPolyfill(\n  ref: RefObject<HTMLImageElement>\n): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      // @ts-ignore typescript can't find the module for some reason ¯\\_(ツ)_/¯\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(ref.current)\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  toggleLoaded?: (loaded: boolean) => void,\n  cacheKey?: string,\n  ref?: RefObject<HTMLImageElement>,\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  const onLoad: ReactEventHandler<HTMLImageElement> = function (e) {\n    if (isLoaded) {\n      return\n    }\n\n    storeImageloaded(cacheKey)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .catch(() => {\n          // ignore error, we just go forward\n        })\n        .then(() => {\n          toggleLoaded(true)\n        })\n    } else {\n      toggleLoaded(true)\n    }\n  }\n\n  // Polyfill \"object-fit\" if unsupported (mostly IE)\n  if (ref?.current && !(`objectFit` in document.documentElement.style)) {\n    ref.current.dataset.objectFit = style.objectFit ?? `cover`\n    ref.current.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n    applyPolyfill(ref)\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n    onLoad,\n    ref,\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport function useImageLoaded(\n  cacheKey: string,\n  loading: \"lazy\" | \"eager\",\n  ref: any\n): {\n  isLoaded: boolean\n  isLoading: boolean\n  toggleLoaded: Dispatch<SetStateAction<boolean>>\n} {\n  const [isLoaded, toggleLoaded] = useState(false)\n  const [isLoading, toggleIsLoading] = useState(loading === `eager`)\n\n  const rAF =\n    typeof window !== `undefined` && `requestAnimationFrame` in window\n      ? requestAnimationFrame\n      : function (cb: TimerHandler): number {\n          return setTimeout(cb, 16)\n        }\n  const cRAF =\n    typeof window !== `undefined` && `cancelAnimationFrame` in window\n      ? cancelAnimationFrame\n      : clearTimeout\n\n  useEffect(() => {\n    let interval: number\n    // @see https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback/50019873#50019873\n    function toggleIfRefExists(): void {\n      if (ref.current) {\n        if (loading === `eager` && ref.current.complete) {\n          storeImageloaded(cacheKey)\n          toggleLoaded(true)\n        } else {\n          toggleIsLoading(true)\n        }\n      } else {\n        interval = rAF(toggleIfRefExists)\n      }\n    }\n    toggleIfRefExists()\n\n    return (): void => {\n      cRAF(interval)\n    }\n  }, [])\n\n  return {\n    isLoading,\n    isLoaded,\n    toggleLoaded,\n  }\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer: string | null = null\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {\n          // eslint-disable-next-line no-undef\n          SERVER && <NativeScriptLoading />\n        }\n      </Fragment>\n    )\n  }\n","/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, ...props },\n    ref\n  ) {\n    const sizes = props.sizes || fallback?.sizes\n    const fallbackImage = (\n      <Image\n        {...props}\n        {...fallback}\n        sizes={sizes}\n        shouldLoad={shouldLoad}\n        innerRef={ref}\n      />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={shouldLoad ? srcSet : undefined}\n            data-srcset={!shouldLoad ? srcSet : undefined}\n            sizes={sizes}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage(props, ref) {\n    return (\n      <>\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, {\n  ElementType,\n  FunctionComponent,\n  CSSProperties,\n  WeakValidationMap,\n} from \"react\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImageHydrator: FunctionComponent<{\n  as?: ElementType\n  style?: CSSProperties\n  className?: string\n}> = function GatsbyImageHydrator({ as: Type = `div`, children, ...props }) {\n  return <Type {...props}>{children}</Type>\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n    if (preactClass) {\n      className = preactClass\n    }\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return (\n      <GatsbyImageHydrator\n        {...wrapperProps}\n        as={as}\n        style={{\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n      >\n        <LayoutWrapper layout={layout} width={width} height={height}>\n          <Placeholder\n            {...getPlaceholderProps(\n              placeholder,\n              false,\n              layout,\n              width,\n              height,\n              placeholderBackgroundColor,\n              objectFit,\n              objectPosition\n            )}\n          />\n\n          <MainImage\n            data-gatsby-image-ssr=\"\"\n            className={imgClassName}\n            {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n            // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n            {...getMainProps(\n              loading === `eager`,\n              false,\n              cleanedImages,\n              loading,\n              undefined,\n              undefined,\n              undefined,\n              imgStyle\n            )}\n          />\n        </LayoutWrapper>\n      </GatsbyImageHydrator>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","/* eslint-disable no-unused-expressions */\nimport React, {\n  Component,\n  ElementType,\n  createRef,\n  MutableRefObject,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  RefObject,\n  CSSProperties,\n} from \"react\"\nimport {\n  getWrapperProps,\n  hasNativeLazyLoadSupport,\n  storeImageloaded,\n  hasImageLoaded,\n  gatsbyImageIsInstalled,\n} from \"./hooks\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport { Layout } from \"../image-utils\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport { Unobserver } from \"./intersection-observer\"\nimport { render } from \"react-dom\"\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: () => void\n  onError?: () => void\n  onStartLoad?: (props: { wasCached?: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nclass GatsbyImageHydrator extends Component<\n  GatsbyImageProps,\n  { isLoading: boolean; isLoaded: boolean }\n> {\n  root: RefObject<HTMLImageElement | undefined> = createRef<\n    HTMLImageElement | undefined\n  >()\n  hydrated: MutableRefObject<boolean> = { current: false }\n  forceRender: MutableRefObject<boolean> = {\n    // In dev we use render not hydrate, to avoid hydration warnings\n    current: process.env.NODE_ENV === `development`,\n  }\n  lazyHydrator: () => void | null = null\n  ref = createRef<HTMLImageElement>()\n  unobserveRef: Unobserver\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isLoading: hasNativeLazyLoadSupport(),\n      isLoaded: false,\n    }\n  }\n\n  _lazyHydrate(props, state): Promise<void> {\n    const hasSSRHtml = this.root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    )\n    // On first server hydration do nothing\n    if (hasNativeLazyLoadSupport() && hasSSRHtml && !this.hydrated.current) {\n      this.hydrated.current = true\n      return Promise.resolve()\n    }\n\n    return import(`./lazy-hydrate`).then(({ lazyHydrate }) => {\n      const cacheKey = JSON.stringify(this.props.image.images)\n      this.lazyHydrator = lazyHydrate(\n        {\n          image: props.image.images,\n          isLoading: state.isLoading || hasImageLoaded(cacheKey),\n          isLoaded: state.isLoaded || hasImageLoaded(cacheKey),\n          toggleIsLoaded: () => {\n            props.onLoad?.()\n\n            this.setState({\n              isLoaded: true,\n            })\n          },\n          ref: this.ref,\n          ...props,\n        },\n        this.root,\n        this.hydrated,\n        this.forceRender\n      )\n    })\n  }\n\n  /**\n   * Choose if setupIntersectionObserver should use the image cache or not.\n   */\n  _setupIntersectionObserver(useCache = true): void {\n    import(`./intersection-observer`).then(({ createIntersectionObserver }) => {\n      const intersectionObserver = createIntersectionObserver(() => {\n        if (this.root.current) {\n          const cacheKey = JSON.stringify(this.props.image.images)\n          this.props.onStartLoad?.({\n            wasCached: useCache && hasImageLoaded(cacheKey),\n          })\n          this.setState({\n            isLoading: true,\n            isLoaded: useCache && hasImageLoaded(cacheKey),\n          })\n        }\n      })\n\n      if (this.root.current) {\n        this.unobserveRef = intersectionObserver(this.root)\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState): boolean {\n    let hasChanged = false\n    if (!this.state.isLoading && nextState.isLoading && !nextState.isLoaded) {\n      // Props have changed between SSR and hydration, so we need to force render instead of hydrate\n      this.forceRender.current = true\n    }\n    // this check mostly means people do not have the correct ref checks in place, we want to reset some state to suppport loading effects\n    if (this.props.image.images !== nextProps.image.images) {\n      // reset state, we'll rely on intersection observer to reload\n      if (this.unobserveRef) {\n        // unregister intersectionObserver\n        this.unobserveRef()\n\n        // // on unmount, make sure we cleanup\n        if (this.hydrated.current && this.lazyHydrator) {\n          render(null, this.root.current)\n        }\n      }\n\n      this.setState(\n        {\n          isLoading: false,\n          isLoaded: false,\n        },\n        () => {\n          this._setupIntersectionObserver(false)\n        }\n      )\n\n      hasChanged = true\n    }\n\n    if (this.root.current && !hasChanged) {\n      this._lazyHydrate(nextProps, nextState)\n    }\n\n    return false\n  }\n\n  componentDidMount(): void {\n    if (this.root.current) {\n      const ssrElement = this.root.current.querySelector(\n        `[data-gatsby-image-ssr]`\n      ) as HTMLImageElement\n      const cacheKey = JSON.stringify(this.props.image.images)\n\n      // when SSR and native lazyload is supported we'll do nothing ;)\n      if (\n        hasNativeLazyLoadSupport() &&\n        ssrElement &&\n        gatsbyImageIsInstalled()\n      ) {\n        this.props.onStartLoad?.({ wasCached: false })\n\n        // When the image is already loaded before we have hydrated, we trigger onLoad and cache the item\n        if (ssrElement.complete) {\n          this.props.onLoad?.()\n          storeImageloaded(cacheKey)\n        } else {\n          // We need the current class context (this) inside our named onLoad function\n          // The named function is necessary to easily remove the listener afterward.\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const _this = this\n          // add an onLoad to the image\n          ssrElement.addEventListener(`load`, function onLoad() {\n            ssrElement.removeEventListener(`load`, onLoad)\n\n            _this.props.onLoad?.()\n            storeImageloaded(cacheKey)\n          })\n        }\n\n        return\n      }\n\n      // Fallback to custom lazy loading (intersection observer)\n      this._setupIntersectionObserver(true)\n    }\n  }\n\n  componentWillUnmount(): void {\n    // Cleanup when onmount happens\n    if (this.unobserveRef) {\n      // unregister intersectionObserver\n      this.unobserveRef()\n\n      // on unmount, make sure we cleanup\n      if (this.hydrated.current && this.lazyHydrator) {\n        this.lazyHydrator()\n      }\n    }\n\n    return\n  }\n\n  render(): JSX.Element {\n    const Type = this.props.as || `div`\n    const { width, height, layout } = this.props.image\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    let className = this.props.className\n    // preact class\n    if (this.props.class) {\n      className = this.props.class\n    }\n\n    const sizer = getSizer(layout, width, height)\n\n    return (\n      <Type\n        {...wrapperProps}\n        style={{\n          ...wStyle,\n          ...this.props.style,\n          backgroundColor: this.props.backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n        ref={this.root}\n        dangerouslySetInnerHTML={{\n          __html: sizer,\n        }}\n        suppressHydrationWarning\n      />\n    )\n  }\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n    const { className, class: classSafe, backgroundColor, image } = props\n    const { width, height, layout } = image\n    const propsKey = JSON.stringify([\n      width,\n      height,\n      layout,\n      className,\n      classSafe,\n      backgroundColor,\n    ])\n    return <GatsbyImageHydrator key={propsKey} {...props} />\n  }\n\nGatsbyImage.propTypes = propTypes\n\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/main-pic.png\"\r\n        width={80}\r\n        height={80}\r\n        quality={90}\r\n        alt=\"Profile picture\"\r\n      />\r\n      <p>수영아 오늘도 공부했니</p>\r\n      {/*{author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a>\r\n        </p>\r\n      )} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"home-module--container--Crpep\";\nexport var section = \"home-module--section--kTUEU\";\nexport var row = \"home-module--row--h9uZb\";\nexport var postsWrap = \"home-module--postsWrap--Lx84a\";\nexport var post = \"home-module--post--6NpMA\";\nexport var tagsWrap = \"home-module--tagsWrap--WClgw\";\nexport var post_tag = \"home-module--post_tag--BeAPM\";\nexport var post_tag_txt = \"home-module--post_tag_txt--+gQVd\";\nexport var post_tag_count = \"home-module--post_tag_count--6Z225\";\nexport var thumbnail = \"home-module--thumbnail--Se23y\";\nexport var post_content = \"home-module--post_content--FgurA\";\nexport var post_content_title = \"home-module--post_content_title--ejisz\";","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport * as list from \"../components/home.module.css\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst BlogMain = ({ data, location }) => {\r\n  const posts = data.posts.nodes.filter(\r\n    post => post.frontmatter.publish === true\r\n  )\r\n  console.log(\"posts\", posts)\r\n  const categories = data.categories\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location}>\r\n        <Seo title=\"All posts\" />\r\n        <Bio />\r\n        <p>블로그 글들을 확인할 수 없습니다.</p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Seo title=\"All posts\" />\r\n      <Bio />\r\n      <div className={list.tagsWrap}>\r\n        <div className={list.post_tag}>\r\n          <Link to={`/`}>\r\n            <span className={list.post_tag_txt}>전체</span>\r\n            <span className={list.post_tag_count}>{categories.totalCount}</span>\r\n          </Link>\r\n        </div>\r\n        {categories.all?.map(ctr => (\r\n          <div className={list.post_tag}>\r\n            <Link to={`/${ctr.name}`}>\r\n              <span className={list.post_tag_txt}># {ctr.name}</span>\r\n              <span className={list.post_tag_count}>{ctr.totalCount}</span>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={list.postsWrap}>\r\n        {posts?.map((post, i) => {\r\n          return (\r\n            <div key={i} className={list.post}>\r\n              <div className={list.thumbnail}>\r\n                <Img fluid={post.frontmatter.image?.childImageSharp?.fluid} />\r\n              </div>\r\n              <div className={list.post_content}>\r\n                <span className={list.post_tag}>\r\n                  <span className={list.post_tag_txt}>\r\n                    # {`${post.frontmatter.tags?.[0] || \"\"}`}\r\n                  </span>\r\n                </span>\r\n                <p className={list.post_content_title}>\r\n                  <Link to={`${post.fields.slug}`} itemProp=\"url\">\r\n                    {post.frontmatter.title}\r\n                  </Link>\r\n                </p>\r\n                <small>{post.frontmatter.date}</small>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogMain\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogMain($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    categories: allMarkdownRemark(\r\n      sort: { fields: frontmatter___date, order: ASC }\r\n    ) {\r\n      totalCount\r\n      all: group(field: frontmatter___tags) {\r\n        name: fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n    posts: allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { eq: $tag } } }\r\n    ) {\r\n      categories: group(field: frontmatter___tags) {\r\n        name: fieldValue\r\n        totalCount\r\n      }\r\n      nodes {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"YYYY-MM-DD\")\r\n          title\r\n          tags\r\n          description\r\n          publish\r\n          image {\r\n            childImageSharp {\r\n              fluid {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["strings","raw","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_templateObject","freeze","value","_classCallCheck","instance","TypeError","TemplateTag","_this","this","_len","arguments","transformers","Array","_key","tag","_len2","expressions","_key2","interimTag","bind","transformEndResult","map","transformString","reduce","processSubstitutions","isArray","transformer","previousTag","template","_len3","substitutions","_key3","apply","undefined","concat","resultSoFar","remainingPart","substitution","transformSubstitution","shift","str","res","transform","onString","onSubstitution","endResult","onEndResult","defaults","separator","conjunction","serial","opts","arrayLength","indent","match","join","separatorIndex","lastIndexOf","slice","_toConsumableArray","arr","arr2","from","type","Math","min","el","regexp","RegExp","replace","Error","side","trim","toLowerCase","splitBy","includes","split","isValidValue","x","Number","isNaN","filter","replaceWhat","replaceWith","toString","_interopRequireDefault","require","exports","io","_assertThisInitialized2","_inheritsLoose2","_objectWithoutPropertiesLoose2","_extends2","_react","_propTypes","_excluded","convertProps","convertedProps","default","resolutions","sizes","critical","fixed","fluid","loading","groupByMedia","matchesMedia","_ref","media","isBrowser","window","matchMedia","matches","getImageCacheKey","_ref2","srcData","getCurrentSrcData","src","currentData","some","image","hasArtDirectionSupport","foundMedia","findIndex","noMedia","imageCache","create","inImageCache","cacheKey","hasNativeLazyLoadSupport","HTMLImageElement","hasIOSupport","IntersectionObserver","listeners","WeakMap","generateImageSources","imageVariants","_ref3","srcSet","srcSetWebp","createElement","Fragment","withMedia","without","forEach","variant","push","generateTracedSVGSources","_ref4","tracedSVG","generateBase64Sources","_ref5","base64","generateNoscriptSource","_ref6","isWebp","listenToIntersections","cb","observer","entries","entry","has","get","isIntersecting","intersectionRatio","unobserve","delete","rootMargin","observe","set","noscriptImg","title","alt","width","height","crossOrigin","draggable","Placeholder","forwardRef","ref","generateSources","spreadProps","ariaHidden","baseImage","Img","style","onLoad","onError","otherProps","position","top","left","objectFit","objectPosition","propTypes","object","func","Image","_React$Component","call","seenBefore","isCritical","addNoScript","fadeIn","useIOSupport","isVisible","state","imgLoaded","imgCached","isHydrated","imageRef","createRef","placeholderRef","handleImageLoaded","handleRef","_proto","componentDidMount","setState","onStartLoad","wasCached","img","current","complete","componentWillUnmount","cleanUpListeners","_this2","imageInCache","currentSrc","render","_convertProps","className","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","durationFadeIn","Tag","itemProp","shouldReveal","shouldFadeIn","imageStyle","opacity","transition","bgColor","delayHideStyle","transitionDelay","imagePlaceholderStyle","placeholderImageProps","overflow","maxWidth","maxHeight","JSON","stringify","paddingBottom","aspectRatio","bottom","right","dangerouslySetInnerHTML","__html","divStyle","display","Component","defaultProps","fixedObject","shape","number","isRequired","string","srcWebp","fluidObject","requireFixedOrFluid","originalPropTypes","propName","componentName","_PropTypes$checkPropT","checkPropTypes","oneOfType","arrayOf","bool","oneOf","_default","Set","gatsbyImageIsInstalled","GATSBY___IMAGE","storeImageloaded","add","hasImageLoaded","format","getMainProps","isLoading","isLoaded","images","toggleLoaded","document","documentElement","dataset","objectFitPolyfill","import","willChange","shouldLoad","e","currentTarget","decode","then","getPlaceholderProps","placeholder","layout","wrapperStyle","result","output","Sizer","React","paddingTop","role","LayoutWrapper","children","innerRef","decoding","Picture","fallback","sources","fallbackImage","PropTypes","displayName","MainImage","altValidator","GatsbyImageHydrator","root","hydrated","forceRender","NODE_ENV","lazyHydrator","unobserveRef","_lazyHydrate","hasSSRHtml","querySelector","Promise","resolve","lazyHydrate","_this3","toggleIsLoaded","_setupIntersectionObserver","useCache","intersectionObserver","createIntersectionObserver","_this4","shouldComponentUpdate","nextProps","nextState","hasChanged","_this5","ssrElement","addEventListener","removeEventListener","Type","as","verticalAlign","wStyle","wClass","wrapperProps","sizer","suppressHydrationWarning","GatsbyImage","warn","propsKey","checkDimensionProps","validLayouts","StaticImage","r","imageData","__imageData","__error","console","GatsbyImageBrowser","camelCase","input","options","assign","pascalCase","toUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","preserveCamelCase","_","p1","m","charAt","module","data","useStaticQuery","site","siteMetadata","author","social","S","formats","quality","post_tag","post_tag_txt","post_tag_count","location","posts","nodes","post","frontmatter","publish","log","categories","list","Link","to","totalCount","all","ctr","name","childImageSharp","tags","fields","slug","date"],"sourceRoot":""}