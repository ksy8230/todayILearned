{"version":3,"file":"component---src-pages-index-js-5cfe20400d572a82499d.js","mappings":"8MAyDA,EA9CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBhB,UAAGD,EAAKE,KAAKC,oBAAb,OAAG,EAAwBC,OAC3B,UAAGJ,EAAKE,KAAKC,oBAAb,OAAG,EAAwBE,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,yBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,sBAUA,2C,oBCrCKC,EAAW,+BACXC,EAAe,mCACfC,EAAiB,qCC6D5B,EA9DiB,SAAC,GAAwB,IAAD,EAArBjB,EAAqB,EAArBA,KAAMkB,EAAe,EAAfA,SAClBC,EAAQnB,EAAKmB,MAAMC,MAAMC,QAC7B,SAAAC,GAAI,OAAiC,IAA7BA,EAAKC,YAAYC,WAErBC,EAAazB,EAAKyB,WAExB,OAAqB,IAAjBN,EAAMO,OAEN,gBAAC,IAAD,CAAQR,SAAUA,GAChB,gBAAC,IAAD,CAAKS,MAAM,cACX,gBAAC,EAAD,MACA,iDAMJ,gBAAC,IAAD,CAAQT,SAAUA,GAChB,gBAAC,IAAD,CAAKS,MAAM,cACX,gBAAC,EAAD,MACA,uBAAKrB,UDtBW,gCCuBd,uBAAKA,UAAWsB,GACd,gBAAC,EAAAC,KAAD,CAAMC,GAAE,KACN,wBAAMxB,UAAWsB,GAAjB,MACA,wBAAMtB,UAAWsB,GAAsBH,EAAWM,cAJxD,UAOGN,EAAWO,WAPd,aAOG,EAAgBC,KAAI,SAAAC,GAAG,OACtB,uBAAK5B,UAAWsB,GACd,gBAAC,EAAAC,KAAD,CAAMC,GAAE,IAAMI,EAAIC,MAChB,wBAAM7B,UAAWsB,GAAjB,KAAuCM,EAAIC,MAC3C,wBAAM7B,UAAWsB,GAAsBM,EAAIH,kBAKnD,uBAAKzB,UDxCY,iCCyCda,MAAAA,OADH,EACGA,EAAOc,KAAI,SAACX,EAAMc,GAAO,IAAD,EACvB,OACE,uBAAKC,IAAKD,EAAG9B,UD1CP,4BC2CJ,uBAAKA,UDtCI,kCCuCT,uBAAKA,UDtCO,oCCuCV,wBAAMA,UAAWsB,GACf,wBAAMtB,UAAWsB,GAAjB,UACQ,UAAAN,EAAKC,YAAYe,YAAjB,eAAwB,KAAM,MAGxC,qBAAGhC,UD3Ca,0CC4Cd,gBAAC,EAAAuB,KAAD,CAAMC,GAAE,GAAKR,EAAKiB,OAAOC,KAAQC,SAAS,OACvCnB,EAAKC,YAAYI,QAGtB,6BAAQL,EAAKC,YAAYmB,e","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/home.module.css","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/main-pic.png\"\r\n        width={80}\r\n        height={80}\r\n        quality={90}\r\n        alt=\"Profile picture\"\r\n      />\r\n      <p>수영아 오늘도 공부했니</p>\r\n      {/*{author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a>\r\n        </p>\r\n      )} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"home-module--container--Crpep\";\nexport var section = \"home-module--section--kTUEU\";\nexport var row = \"home-module--row--h9uZb\";\nexport var postsWrap = \"home-module--postsWrap--Lx84a\";\nexport var post = \"home-module--post--6NpMA\";\nexport var tagsWrap = \"home-module--tagsWrap--WClgw\";\nexport var post_tag = \"home-module--post_tag--BeAPM\";\nexport var post_tag_txt = \"home-module--post_tag_txt--+gQVd\";\nexport var post_tag_count = \"home-module--post_tag_count--6Z225\";\nexport var thumbnail = \"home-module--thumbnail--Se23y\";\nexport var post_content = \"home-module--post_content--FgurA\";\nexport var post_content_title = \"home-module--post_content_title--ejisz\";","import * as React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport * as list from \"../components/home.module.css\"\r\n\r\nconst BlogMain = ({ data, location }) => {\r\n  const posts = data.posts.nodes.filter(\r\n    post => post.frontmatter.publish === true\r\n  )\r\n  const categories = data.categories\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location}>\r\n        <Seo title=\"All posts\" />\r\n        <Bio />\r\n        <p>블로그 글들을 확인할 수 없습니다.</p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Seo title=\"All posts\" />\r\n      <Bio />\r\n      <div className={list.tagsWrap}>\r\n        <div className={list.post_tag}>\r\n          <Link to={`/`}>\r\n            <span className={list.post_tag_txt}>전체</span>\r\n            <span className={list.post_tag_count}>{categories.totalCount}</span>\r\n          </Link>\r\n        </div>\r\n        {categories.all?.map(ctr => (\r\n          <div className={list.post_tag}>\r\n            <Link to={`/${ctr.name}`}>\r\n              <span className={list.post_tag_txt}># {ctr.name}</span>\r\n              <span className={list.post_tag_count}>{ctr.totalCount}</span>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={list.postsWrap}>\r\n        {posts?.map((post, i) => {\r\n          return (\r\n            <div key={i} className={list.post}>\r\n              <div className={list.thumbnail}></div>\r\n              <div className={list.post_content}>\r\n                <span className={list.post_tag}>\r\n                  <span className={list.post_tag_txt}>\r\n                    # {`${post.frontmatter.tags?.[0] || \"\"}`}\r\n                  </span>\r\n                </span>\r\n                <p className={list.post_content_title}>\r\n                  <Link to={`${post.fields.slug}`} itemProp=\"url\">\r\n                    {post.frontmatter.title}\r\n                  </Link>\r\n                </p>\r\n                <small>{post.frontmatter.date}</small>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogMain\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogMain($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    categories: allMarkdownRemark(\r\n      sort: { fields: frontmatter___date, order: ASC }\r\n    ) {\r\n      totalCount\r\n      all: group(field: frontmatter___tags) {\r\n        name: fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n    posts: allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { eq: $tag } } }\r\n    ) {\r\n      categories: group(field: frontmatter___tags) {\r\n        name: fieldValue\r\n        totalCount\r\n      }\r\n      nodes {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"YYYY-MM-DD\")\r\n          title\r\n          tags\r\n          description\r\n          publish\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","site","siteMetadata","author","social","className","S","layout","formats","src","width","height","quality","alt","post_tag","post_tag_txt","post_tag_count","location","posts","nodes","filter","post","frontmatter","publish","categories","length","title","list","Link","to","totalCount","all","map","ctr","name","i","key","tags","fields","slug","itemProp","date"],"sourceRoot":""}