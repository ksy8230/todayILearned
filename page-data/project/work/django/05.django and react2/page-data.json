{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/project/work/django/05.django and react2/",
    "result": {"data":{"site":{"siteMetadata":{"title":"ksy8230.github.io"}},"markdownRemark":{"id":"cb36369c-83d5-55bb-83bf-19fc5d2fe994","excerpt":"장고와 리액트 연결하기 앞선 포스팅에 이어서 이번엔 프론트단에 해당하는 리액트 앱에서 장고 api 서버를 요청해 보자. ✅ CRA 설치 CRA 보일러 프로젝트를 이용해 django-front 앱을 만든다. 루트에 해당하는 App.js 파일에서 axios 라이브러리를 이용해 장고 urls…","html":"<h3 id=\"장고와-리액트-연결하기\" style=\"position:relative;\">장고와 리액트 연결하기<a href=\"#%EC%9E%A5%EA%B3%A0%EC%99%80-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0\" aria-label=\"장고와 리액트 연결하기 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>앞선 포스팅에 이어서 이번엔 프론트단에 해당하는 리액트 앱에서 장고 api 서버를 요청해 보자.</p>\n<p>✅ CRA 설치</p>\n<p>CRA 보일러 프로젝트를 이용해 django-front 앱을 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> npx create-react-app django-front</code></pre></div>\n<p>루트에 해당하는 App.js 파일에서 axios 라이브러리를 이용해 장고 urls.py 에서 설정한 api 경로를 요청해 보자.</p>\n<p>django-front > App.js</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">\"axios\"</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onloadData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://127.0.0.1:8000/article/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onloadData<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">show me the article list!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>결과 😣 CORS 에러.</p>\n<p><img src=\"https://user-images.githubusercontent.com/24996316/177021746-b6b5484c-e666-476d-a895-459c0227fd42.png\" alt=\"image\"></p>\n<blockquote>\n<p>CORS 에러는 왜 생길까?<br>\n외부로부터 오는 서버 공격을 보호하기 위해 특정 도메인, IP 이외의 경로로 들어오는 요청을 브라우저가 차단하는 에러이다.<br>\nCORS 는 HTTP 요청 헤더 중에 Origin 이라는 속성의 헤더와 관련되어있다. 동일한 출처로부터 요청이 온 것인지 브라우저가 확인을 해 보고 아니라면 에러를 내는 것.<br>\n장고 서버는 localhost:8000 이고 리액트 앱은 localhost:3000 이기 때문에 동일하지 않은 포트로 요청을 한 것임으로 장고 서버의 입장에서 외부 서버인 프론트앱 서버에서 보내는 요청의 헤더에 cross origin HTTP 요청을 허가한다는 내용을 추가해야 한다.</p>\n</blockquote>\n<p>✅ CORS 에러 해결하기</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> pip install django-cors-headers</code></pre></div>\n<p>settings.py</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">'corsheaders'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span>\r\n\r\nMIDDLEWARE <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">'corsheaders.middleware.CorsMiddleware'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span>\r\n\r\nCORS_ORIGIN_WHITELIST <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'http://127.0.0.1:3000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://localhost:3000'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 교차 출처 허락 리스트</span>\r\nCORS_ALLOW_CREDENTIALS <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\"># 교차 출처를 허용</span></code></pre></div>\n<p>프론트앱에서 <a href=\"http://127.0.0.1:8000/article/\">http://127.0.0.1:8000/article/</a> 장고서버로 다시 요청을 해 보면 서버에서 요청의 응답에 <code class=\"language-text\">Access-Control-Allow-Credentials: true</code> 속성을 부여해 브라우저가 해당 요청을 허용한 걸 확인할 수 있다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/24996316/177171982-e1e62ff2-a3d2-4c99-8401-eccc9da336b1.png\" alt=\"image\"></p>","frontmatter":{"title":"5. 무작정 장고로 사이드 프로젝트 만들기 - djangorestframework와 react 연결해 보기 (2)","date":"2022-07-03","description":null,"tags":["Django"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%9E%A5%EA%B3%A0%EC%99%80-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0\">장고와 리액트 연결하기</a></li>\n</ul>"},"previous":{"fields":{"slug":"/project/work/django/04.django and react/"},"frontmatter":{"title":"4. 무작정 장고로 사이드 프로젝트 만들기 - djangorestframework와 react 연결해 보기 (1)"}},"next":{"fields":{"slug":"/project/work/django/06.로그인과 회원가입/"},"frontmatter":{"title":"6. 무작정 장고로 사이드 프로젝트 만들기 - djangorestframework로 로그인과 회원가입 API 만들기"}}},"pageContext":{"id":"cb36369c-83d5-55bb-83bf-19fc5d2fe994","previousPostId":"b704e794-77ec-5b1a-be74-6f9156b536b8","nextPostId":"09b9fac1-e7f9-5477-b9b1-66d83754709a"}},
    "staticQueryHashes": ["2841359383","3708219967"]}