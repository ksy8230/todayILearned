{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/nextjs/nextjs 알아보기/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Today I Learned"}},"markdownRemark":{"id":"c11727a9-8a0b-5363-a960-3ba4e4740574","excerpt":"기존에 개발된 프로젝트들이 모두 리액트 라이브러리로 이루어져있고 개발 중 빌드 단계에서 긴 시간을 잡아먹는 게 불편하다는 생각이 들었다. 그래서 빌드 툴만 바꿀 생각으로 이런 저런 내용들을 찾아보다 결국 NextJS로 다시 돌아왔다. 현재까지 나온 NextJS의 버전은 1…","html":"<p>기존에 개발된 프로젝트들이 모두 리액트 라이브러리로 이루어져있고 개발 중 빌드 단계에서 긴 시간을 잡아먹는 게 불편하다는 생각이 들었다. 그래서 빌드 툴만 바꿀 생각으로 이런 저런 내용들을 찾아보다 결국 NextJS로 다시 돌아왔다.<br>\n현재까지 나온 NextJS의 버전은 13이고 버전 12부터 SWC 라는 컴파일러를 사용한다고 한다. (*SWC는 웹을 위해 나온 러스트 기반의 플랫폼이다)</p>\n<h3 id=\"NextJS란\" style=\"position:relative;\">NextJS란<a href=\"#NextJS%EB%9E%80\" aria-label=\"NextJS란 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<blockquote>\n<p>리액트 라이브러리 + express + react-router-dom + ssr</p>\n</blockquote>\n<p>한 줄로 설명하자면 이렇게 되겠다. 정확히 expressjs, reac-router-dom을 가져다 쓰고 있다는 의미가 아닌, express의 기능을 갖추고 있고 리액트 프로젝트로 구성을 할 때 매번 따로 설치해줘야했던 라우터 설정이 이미 포함되어있다는 의미로 이렇게 표현한다.</p>\n<h4 id=\"단일-페이지-개발-기능\" style=\"position:relative;\">단일 페이지 개발 기능<a href=\"#%EB%8B%A8%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B0%9C%EB%B0%9C-%EA%B8%B0%EB%8A%A5\" aria-label=\"단일 페이지 개발 기능 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>NextJS의 베이스에는 리액트 라이브러리가 존재한다. 즉, 리액트에서 사용하던 useEffect, useState 등 리액트에서 유용하게 활용하던 api 함수들을 모두 가져다 쓸 수 있다는 말이다. NextJS는 SPA 형식으로 웹 개발이 가능하고 NextJS에서 제공해 주는 api들을 통해 특정 페이지 범위, 혹은 전역 범위에서 서버사이드렌더링 개발이 별다른 설치 없이 이루어지도록 만들어진 프레임워크이다.</p>\n<h4 id=\"자체-API-기능\" style=\"position:relative;\">자체 API 기능<a href=\"#%EC%9E%90%EC%B2%B4-API-%EA%B8%B0%EB%8A%A5\" aria-label=\"자체 API 기능 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>NextJS에서 express에 해당하는 기능으로는 웹 api 기능을 자체적으로 지원하는 부분에서 유사하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"></code></pre></div>\n<p>NextJS 프레임워크를 설치하여 내부 폴더를 보면 위와 같은 파일이 존재하고 브라우저에 <a href=\"http://localhost:3000/api/hello\">http://localhost:3000/api/hello</a> 에 접속해보면 일반 웹 화면이 아닌 json 결과 값이 보인다. 이 기능을 본 프로젝트(리액트 프로젝트)를 마이그레이션할 때 사용할 것 같지는 않지만 일단 지금은 이런 기능이 있구나 하고 넘어가자.</p>\n<h4 id=\"페이지-단위-라우팅-기능\" style=\"position:relative;\">페이지 단위 라우팅 기능<a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%8B%A8%EC%9C%84-%EB%9D%BC%EC%9A%B0%ED%8C%85-%EA%B8%B0%EB%8A%A5\" aria-label=\"페이지 단위 라우팅 기능 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>package.json 과 같은 경로에서 npm run build 명령어로 NextJS 프레임워크를 빌드해 보면 .next 폴더가 생긴다. 그리고 이 폴더의 내부를 살펴보면 /static 하위에 페이지별로 js 파일들이 나뉘어서 들어가있는 걸 확인할 수 있다. 라우팅시키는 개발 방식 또한 굉장히 간단하다.<br>\n<a href=\"http://localhost:3000/main\">http://localhost:3000/main</a> -> /page/main/index.ts<br>\n<a href=\"http://localhost:3000/detail/1\">http://localhost:3000/detail/1</a> (동적 페이지) -> /page/detail/[id].ts</p>\n<h4 id=\"서버사이드렌더링\" style=\"position:relative;\">서버사이드렌더링<a href=\"#%EC%84%9C%EB%B2%84%EC%82%AC%EC%9D%B4%EB%93%9C%EB%A0%8C%EB%8D%94%EB%A7%81\" aria-label=\"서버사이드렌더링 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<h3 id=\"nginx와의-연관성\" style=\"position:relative;\">nginx와의 연관성<a href=\"#nginx%EC%99%80%EC%9D%98-%EC%97%B0%EA%B4%80%EC%84%B1\" aria-label=\"nginx와의 연관성 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>NextJS 사용 방법을 검색해 보면 nginx가 심심찮게 보이는 걸 확인할 수 있다. 사내 프로젝트에서도 리액트의 정적인 빌드 결과물을 nginx를 이용해 서버로 올린다는 표현을 했는데… 웹 서버에 nginx를 사용하는 이유가 뭔지 궁금해 겸사로 찾아보았다. (어차피 이 다음 해 볼 일이 NextJS 배포 관련이니 지금 미리 공부해 둔다고 생각하자)<br>\nnginx가 웹에서 하는 역할로는 프록시 서버라는 기능이 있다. 웹 리소스를 올리는 서버의 실제 포트가 3000이라면 nginx에서 80으로 연결시켜 실제 서버의 정보를 한 겹 숨겨주는 보안적 기능을 가져갈 수 있다.</p>","frontmatter":{"title":"NextJS 기본 개념","date":"2022-11-15","description":null,"tags":["nextjs"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#nextjs%EB%9E%80\">NextJS란</a></p>\n<ul>\n<li><a href=\"#%EB%8B%A8%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B0%9C%EB%B0%9C-%EA%B8%B0%EB%8A%A5\">단일 페이지 개발 기능</a></li>\n<li><a href=\"#%EC%9E%90%EC%B2%B4-api-%EA%B8%B0%EB%8A%A5\">자체 API 기능</a></li>\n<li><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%8B%A8%EC%9C%84-%EB%9D%BC%EC%9A%B0%ED%8C%85-%EA%B8%B0%EB%8A%A5\">페이지 단위 라우팅 기능</a></li>\n<li><a href=\"#%EC%84%9C%EB%B2%84%EC%82%AC%EC%9D%B4%EB%93%9C%EB%A0%8C%EB%8D%94%EB%A7%81\">서버사이드렌더링</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#nginx%EC%99%80%EC%9D%98-%EC%97%B0%EA%B4%80%EC%84%B1\">nginx와의 연관성</a></p>\n</li>\n</ul>"},"previous":{"fields":{"slug":"/reactjs/리랜더링이 먹히는 경우/"},"frontmatter":{"title":"리렌더링이 먹히는 경우"}},"next":null},"pageContext":{"id":"c11727a9-8a0b-5363-a960-3ba4e4740574","previousPostId":"a30c5345-1d87-5f2d-898d-1c835b1611e3","nextPostId":null}},
    "staticQueryHashes": ["2841359383","3708219967"]}