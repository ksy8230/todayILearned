{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/setting/react/웹취약점관련/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Today I Learned"}},"markdownRemark":{"id":"53b0d7cd-088d-5257-bf89-7a277967102c","excerpt":"회사에서 납품한 프로젝트 업무 중에 웹 취약점 점검이라는 것이 있었다. 간단하게 알아본 내용을 정리하자. Content-Security-Policy…","html":"<p>회사에서 납품한 프로젝트 업무 중에 웹 취약점 점검이라는 것이 있었다. 간단하게 알아본 내용을 정리하자.</p>\n<h3>Content-Security-Policy란</h3>\n<p>브라우저는 페이지를 보여주거나 컨텐츠를 로드할 때 어딘가 존재하는 서버로 요청을 보내는데 이때 응답에 포함된 헤더라는 게 존재한다.<br>\n이 헤더를 통해서 브라우저가 자체적으로 컨텐츠를 차단해 주는 기능이 있고 이 부분과 관련된 정책을 CPS 정책이라고 한다.</p>\n<ol>\n<li>‘none’ : 어떤 것도 허용 안 함</li>\n<li>‘self’ : 동일 출처 도메인에 한하여 허용, 하위 도메인에서는 허용 안 함</li>\n<li>‘unsafe-inline’ : 인라인 자바스크립트, 스타일을 허용</li>\n<li>‘unsafe-eval’ : eval과 같은 텍스트 형식을 허용 안 함</li>\n</ol>\n<h3>예시</h3>\n<p>nginx 헤더에 추가한 한 줄을 설명해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">add_header</span> Content-Security-Policy <span class=\"token string\">\"default-src 'self'; img-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self';\"</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>default-src</strong> : 기본적은 리소스들은 동일 출처 도메인에 한해서만 허용<br>\n<strong>img-src</strong> : 이미지 리소스들은 동일 출처 도메인에 한해서만 허용<br>\n<strong>style-src</strong> : 스타일 리소스들은 동일 출처 도메인에 한해서만 허용, 인라인 형태 추가 허용<br>\n<strong>script-src</strong> : 스크립트 리소스들은 동일 출처 도메인에 한해서만 허용, 인라인 형태 추가 허용</p>\n<p>프로젝트가 리액트로 개발되어서 빈 html에 js, css파일들이 추가되는 형식이라 (인라인) ‘unsafe-inline’ 정책을 빼기가 어려웠다…<br>\n즉, 내가 설정한 정책은 가장 기본적이면서 완화된 정책을 사용한 것.</p>\n<h3>참고 링크</h3>\n<ul>\n<li><a href=\"https://content-security-policy.com/\">https://content-security-policy.com/</a></li>\n<li>보안정책 예시 (<a href=\"https://content-security-policy.com/examples/\">https://content-security-policy.com/examples/</a>)</li>\n</ul>","frontmatter":{"title":"웹 보안, 웹 취약점 설정","date":"2022-08-05","description":null,"tags":["setting"]}},"previous":{"fields":{"slug":"/project/work/django/10.두 테이블 연동/"},"frontmatter":{"title":"10. 무작정 장고로 사이드프로젝트 만들기"}},"next":{"fields":{"slug":"/nextjs/Nextjs/"},"frontmatter":{"title":"NextJS API 공부 - 동적 페이지 서버사이드 렌더링 작업 (getStaticPaths, getStaticProps)"}}},"pageContext":{"id":"53b0d7cd-088d-5257-bf89-7a277967102c","previousPostId":"08b4bdbe-d587-5053-8e83-bfc34e1adf0b","nextPostId":"69924af5-b63c-5ad1-a54c-cfb04325688d"}},
    "staticQueryHashes": ["2841359383","3708219967"]}