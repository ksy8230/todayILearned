{"version":3,"file":"component---src-pages-index-js-76acad19b54bceb8584c.js","mappings":"yHAEA,IAyBIA,EAAY,SAAmBC,EAAOC,GACxC,GAAuB,iBAAVD,IAAsBE,MAAMC,QAAQH,GAC/C,MAAM,IAAII,UAAU,gDAEtBH,EAAUI,OAAOC,OAAO,CACtBC,YAAY,GACXN,GACH,IAAuCO,EAYvC,OARER,EADEE,MAAMC,QAAQH,GACRA,EAAMS,KAAI,SAAUD,GAC1B,OAAOA,EAAEE,MACX,IAAGC,QAAO,SAAUH,GAClB,OAAOA,EAAEI,MACX,IAAGC,KAAK,KAEAb,EAAMU,OAEK,IAAjBV,EAAMY,OACD,GAEY,IAAjBZ,EAAMY,OACDX,EAAQM,WAAaP,EAAMc,cAAgBd,EAAMe,eAEvCf,IAAUA,EAAMe,gBAEjCf,EApDoB,SAA2BgB,GAIjD,IAHA,IAAIC,GAAkB,EAClBC,GAAkB,EAClBC,GAAsB,EACjBC,EAAI,EAAGA,EAAIJ,EAAOJ,OAAQQ,IAAK,CACtC,IAAIC,EAAYL,EAAOI,GACnBH,GAAmB,WAAWK,KAAKD,IAAcA,EAAUP,gBAAkBO,GAC/EL,EAASA,EAAOO,MAAM,EAAGH,GAAK,IAAMJ,EAAOO,MAAMH,GACjDH,GAAkB,EAClBE,EAAsBD,EACtBA,GAAkB,EAClBE,KACSF,GAAmBC,GAAuB,WAAWG,KAAKD,IAAcA,EAAUN,gBAAkBM,GAC7GL,EAASA,EAAOO,MAAM,EAAGH,EAAI,GAAK,IAAMJ,EAAOO,MAAMH,EAAI,GACzDD,EAAsBD,EACtBA,GAAkB,EAClBD,GAAkB,IAElBA,EAAkBI,EAAUN,gBAAkBM,GAAaA,EAAUP,gBAAkBO,EACvFF,EAAsBD,EACtBA,EAAkBG,EAAUP,gBAAkBO,GAAaA,EAAUN,gBAAkBM,EAE3F,CACA,OAAOL,CACT,CA4BYQ,CAAkBxB,IAE5BA,EAAQA,EAAMyB,QAAQ,YAAa,IAAIV,cAAcU,QAAQ,mBAAmB,SAAUC,EAAGC,GAC3F,OAAOA,EAAGb,aACZ,IAAGW,QAAQ,cAAc,SAAUG,GACjC,OAAOA,EAAEd,aACX,IA1BuCN,EA2BpBR,EA1BVC,EAAQM,WAAaC,EAAEqB,OAAO,GAAGf,cAAgBN,EAAEe,MAAM,GAAKf,EA2BzE,EACAsB,EAAOC,QAAUhC,EAEjB+B,EAAOC,QAAP,QAAyBhC,C,wCC/DrBiC,EAAyBC,EAAQ,MAKrC,IAwJIC,EAxJAC,EAA0BH,EAAuBC,EAAQ,OAEzDG,EAAkBJ,EAAuBC,EAAQ,OAEjDI,EAAiCL,EAAuBC,EAAQ,OAEhEK,EAAYN,EAAuBC,EAAQ,MAE3CM,EAASP,EAAuBC,EAAQ,OAExCO,EAAaR,EAAuBC,EAAQ,OAE5CQ,EAAY,CAAC,QAAS,SAAU,MAAO,QAAS,SAAU,UAAW,UAAW,YAAa,cAe7FC,EAAe,SAAsBC,GACvC,IAAIC,GAAiB,EAAIN,EAAUO,SAAS,CAAC,EAAGF,GAC5CG,EAAcF,EAAeE,YAC7BC,EAAQH,EAAeG,MACvBC,EAAWJ,EAAeI,SA4B9B,OA1BIF,IACFF,EAAeK,MAAQH,SAEhBF,EAAeE,aAGpBC,IACFH,EAAeM,MAAQH,SAEhBH,EAAeG,OAGpBC,IAEFJ,EAAeO,QAAU,SAIvBP,EAAeM,QACjBN,EAAeM,MAAQE,EAAa,GAAGC,OAAOT,EAAeM,SAG3DN,EAAeK,QACjBL,EAAeK,MAAQG,EAAa,GAAGC,OAAOT,EAAeK,SAGxDL,CACT,EAqBIU,EAAe,SAAsBC,GACvC,IAAIC,EAAQD,EAAKC,MACjB,QAAOA,IAAQC,KAAeC,OAAOC,WAAWH,GAAOI,QACzD,EASIC,EAAmB,SAA0BC,GAC/C,IAAIZ,EAAQY,EAAMZ,MACdD,EAAQa,EAAMb,MACdc,EAAUC,EAAkBd,GAASD,GAAS,IAClD,OAAOc,GAAWA,EAAQE,GAC5B,EAQID,EAAoB,SAA2BE,GACjD,GAAIT,GAtCuB,SAAgCS,GAC3D,QAASA,GAAehE,MAAMC,QAAQ+D,IAAgBA,EAAYC,MAAK,SAAUC,GAC/E,YAA8B,IAAhBA,EAAMZ,KACtB,GACF,CAkCmBa,CAAuBH,GAAc,CAEpD,IAAII,EAAaJ,EAAYK,UAAUjB,GAEvC,IAAoB,IAAhBgB,EACF,OAAOJ,EAAYI,GAIrB,IAAIE,EAAUN,EAAYK,WAAU,SAAUH,GAC5C,YAA8B,IAAhBA,EAAMZ,KACtB,IAEA,IAAiB,IAAbgB,EACF,OAAON,EAAYM,EAEvB,CAGA,OAAON,EAAY,EACrB,EAIIO,EAAapE,OAAOqE,OAAO,CAAC,GAE5BC,EAAe,SAAsBhC,GACvC,IAAIC,EAAiBF,EAAaC,GAC9BiC,EAAWf,EAAiBjB,GAChC,OAAO6B,EAAWG,KAAa,CACjC,EAYIC,EAAuD,oBAArBC,kBAAoC,YAAaA,iBAAiBC,UACpGtB,EAA8B,oBAAXC,OACnBsB,EAAevB,GAAaC,OAAOuB,qBAEnCC,EAAY,IAAIC,QAwBpB,SAASC,EAAqBC,GAC5B,OAAOA,EAAc5E,KAAI,SAAU6E,GACjC,IAAIrB,EAAMqB,EAAMrB,IACZsB,EAASD,EAAMC,OACfC,EAAaF,EAAME,WACnBhC,EAAQ8B,EAAM9B,MACdT,EAAQuC,EAAMvC,MAClB,OAAoBR,EAAOM,QAAQ4C,cAAclD,EAAOM,QAAQ6C,SAAU,CACxEC,IAAK1B,GACJuB,GAA2BjD,EAAOM,QAAQ4C,cAAc,SAAU,CACnEG,KAAM,aACNpC,MAAOA,EACP+B,OAAQC,EACRzC,MAAOA,IACLwC,GAAuBhD,EAAOM,QAAQ4C,cAAc,SAAU,CAChEjC,MAAOA,EACP+B,OAAQA,EACRxC,MAAOA,IAEX,GACF,CAIA,SAASK,EAAaiC,GACpB,IAAIQ,EAAY,GACZC,EAAU,GASd,OARAT,EAAcU,SAAQ,SAAUC,GAC9B,OAAQA,EAAQxC,MAAQqC,EAAYC,GAASG,KAAKD,EACpD,IAMO,GAAG3C,OAAOwC,EAAWC,EAC9B,CAEA,SAASI,EAAyBb,GAChC,OAAOA,EAAc5E,KAAI,SAAU0F,GACjC,IAAIlC,EAAMkC,EAAMlC,IACZT,EAAQ2C,EAAM3C,MACd4C,EAAYD,EAAMC,UACtB,OAAoB7D,EAAOM,QAAQ4C,cAAc,SAAU,CACzDE,IAAK1B,EACLT,MAAOA,EACP+B,OAAQa,GAEZ,GACF,CAEA,SAASC,EAAsBhB,GAC7B,OAAOA,EAAc5E,KAAI,SAAU6F,GACjC,IAAIrC,EAAMqC,EAAMrC,IACZT,EAAQ8C,EAAM9C,MACd+C,EAASD,EAAMC,OACnB,OAAoBhE,EAAOM,QAAQ4C,cAAc,SAAU,CACzDE,IAAK1B,EACLT,MAAOA,EACP+B,OAAQgB,GAEZ,GACF,CAEA,SAASC,EAAuBC,EAAOC,GACrC,IAAInB,EAASkB,EAAMlB,OACfC,EAAaiB,EAAMjB,WACnBhC,EAAQiD,EAAMjD,MACdT,EAAQ0D,EAAM1D,MAKlB,MAAO,YAFQ2D,EAAS,qBAAuB,KAD/BlD,EAAQ,UAAaA,EAAQ,KAAQ,IAGV,YAJjCkD,EAASlB,EAAaD,GAI+B,MAD/CxC,EAAQ,UAAaA,EAAQ,KAAQ,IAC8B,IACrF,CAQA,IAAI4D,EAAwB,SAA+BC,EAAIC,GAC7D,IAAIC,QAxGc,IAAP5E,GAAwC,oBAAXwB,QAA0BA,OAAOuB,uBACvE/C,EAAK,IAAIwB,OAAOuB,sBAAqB,SAAU8B,GAC7CA,EAAQhB,SAAQ,SAAUiB,GACxB,GAAI9B,EAAU+B,IAAID,EAAME,QAAS,CAC/B,IAAIL,EAAK3B,EAAUiC,IAAIH,EAAME,SAEzBF,EAAMI,gBAAkBJ,EAAMK,kBAAoB,KACpDnF,EAAGoF,UAAUN,EAAME,QACnBhC,EAAUqC,OAAOP,EAAME,QACvBL,IAEJ,CACF,GACF,GAAG,CACDW,WAAY,WAITtF,GA6FP,OALI4E,IACFA,EAASW,QAAQb,GACjB1B,EAAUwC,IAAId,EAAIC,IAGb,WACLC,EAASQ,UAAUV,GACnB1B,EAAUqC,OAAOX,EACnB,CACF,EAEIe,EAAc,SAAqBhF,GAGrC,IAAIsB,EAAMtB,EAAMsB,IAAM,QAAWtB,EAAMsB,IAAM,KAAQ,UAEjDlB,EAAQJ,EAAMI,MAAQ,UAAaJ,EAAMI,MAAQ,KAAQ,GACzDwC,EAAS5C,EAAM4C,OAAS,WAAc5C,EAAM4C,OAAS,KAAQ,GAC7DqC,EAAQjF,EAAMiF,MAAQ,UAAajF,EAAMiF,MAAQ,KAAQ,GACzDC,EAAMlF,EAAMkF,IAAM,QAAWlF,EAAMkF,IAAM,KAAQ,UAEjDC,EAAQnF,EAAMmF,MAAQ,UAAanF,EAAMmF,MAAQ,KAAQ,GACzDC,EAASpF,EAAMoF,OAAS,WAAcpF,EAAMoF,OAAS,KAAQ,GAC7DC,EAAcrF,EAAMqF,YAAc,gBAAmBrF,EAAMqF,YAAc,KAAQ,GACjF7E,EAAUR,EAAMQ,QAAU,YAAeR,EAAMQ,QAAU,KAAQ,GACjE8E,EAAYtF,EAAMsF,UAAY,cAAiBtF,EAAMsF,UAAY,KAAQ,GAE7E,MAAO,YAD+BtF,EAAM0C,cAlCvB5E,KAAI,SAAUuF,GACjC,OAAQA,EAAQR,WAAagB,EAAuBR,GAAS,GAAQ,IAAMQ,EAAuBR,EACpG,IAAGnF,KAAK,IAiCuB,QAAUsC,EAAU2E,EAAQC,EAAShF,EAAQwC,EAAStB,EAAM4D,EAAMD,EAAQI,EAAcC,EAAY,6HACrI,EAKIC,EAA2B3F,EAAOM,QAAQsF,YAAW,SAAUxF,EAAOyF,GACxE,IAAInE,EAAMtB,EAAMsB,IACZoB,EAAgB1C,EAAM0C,cACtBgD,EAAkB1F,EAAM0F,gBACxBC,EAAc3F,EAAM2F,YACpBC,EAAa5F,EAAM4F,WAEnBC,EAAyBjG,EAAOM,QAAQ4C,cAAcgD,GAAK,EAAInG,EAAUO,SAAS,CACpFuF,IAAKA,EACLnE,IAAKA,GACJqE,EAAa,CACdC,WAAYA,KAGd,OAAOlD,EAAczE,OAAS,EAAiB2B,EAAOM,QAAQ4C,cAAc,UAAW,KAAM4C,EAAgBhD,GAAgBmD,GAAaA,CAC5I,IAEIC,EAAmBlG,EAAOM,QAAQsF,YAAW,SAAUxF,EAAOyF,GAChE,IAAIrF,EAAQJ,EAAMI,MACdwC,EAAS5C,EAAM4C,OACftB,EAAMtB,EAAMsB,IACZyE,EAAQ/F,EAAM+F,MACdC,EAAShG,EAAMgG,OACfC,EAAUjG,EAAMiG,QAChBzF,EAAUR,EAAMQ,QAChB8E,EAAYtF,EAAMsF,UAClBM,EAAa5F,EAAM4F,WACnBM,GAAa,EAAIxG,EAA+BQ,SAASF,EAAOF,GACpE,OAAoBF,EAAOM,QAAQ4C,cAAc,OAAO,EAAInD,EAAUO,SAAS,CAC7E,cAAe0F,EACfxF,MAAOA,EACPwC,OAAQA,EACRtB,IAAKA,GACJ4E,EAAY,CACbF,OAAQA,EACRC,QAASA,EACTR,IAAKA,EACLjF,QAASA,EACT8E,UAAWA,EACXS,OAAO,EAAIpG,EAAUO,SAAS,CAC5BiG,SAAU,WACVC,IAAK,EACLC,KAAM,EACNlB,MAAO,OACPC,OAAQ,OACRkB,UAAW,QACXC,eAAgB,UACfR,KAEP,IAEAD,EAAIU,UAAY,CACdT,MAAOlG,EAAWK,QAAQuG,OAC1BR,QAASpG,EAAWK,QAAQwG,KAC5BV,OAAQnG,EAAWK,QAAQwG,MAG7B,IAAIC,EAAqB,SAAUC,GAGjC,SAASD,EAAM3G,GACb,IAAI6G,GAEJA,EAAQD,EAAiBE,KAAKC,KAAM/G,IAAU+G,MAGxCC,WAAalG,GAAakB,EAAahC,GAC7C6G,EAAMI,WAA+B,UAAlBjH,EAAMQ,SAAuBR,EAAMK,SACtDwG,EAAMK,cAAgBL,EAAMI,aAAejH,EAAMmH,QACjDN,EAAMO,cAAgBlF,GAA4BG,IAAiBwE,EAAMI,aAAeJ,EAAMG,WAC9F,IAAIK,EAAYR,EAAMI,YAAcnG,IAAcoB,IAA6B2E,EAAMO,cAYrF,OAXAP,EAAMS,MAAQ,CACZD,UAAWA,EACXE,WAAW,EACXC,WAAW,EACXL,QAASN,EAAMG,YAAchH,EAAMmH,OACnCM,YAAY,GAEdZ,EAAMa,SAAwB9H,EAAOM,QAAQyH,YAC7Cd,EAAMe,eAAiB5H,EAAM4H,gBAA+BhI,EAAOM,QAAQyH,YAC3Ed,EAAMgB,kBAAoBhB,EAAMgB,kBAAkBC,MAAK,EAAItI,EAAwBU,SAAS2G,IAC5FA,EAAMkB,UAAYlB,EAAMkB,UAAUD,MAAK,EAAItI,EAAwBU,SAAS2G,IACrEA,CACT,EAzBA,EAAIpH,EAAgBS,SAASyG,EAAOC,GA2BpC,IAAIoB,EAASrB,EAAMvE,UA4QnB,OA1QA4F,EAAOC,kBAAoB,WAWzB,GAVAlB,KAAKmB,SAAS,CACZT,WAAY3G,IAGViG,KAAKO,MAAMD,WAA+C,mBAA3BN,KAAK/G,MAAMmI,aAC5CpB,KAAK/G,MAAMmI,YAAY,CACrBC,UAAWpG,EAAa+E,KAAK/G,SAI7B+G,KAAKE,WAAY,CACnB,IAAIoB,EAAMtB,KAAKW,SAASY,QAEpBD,GAAOA,EAAIE,UACbxB,KAAKc,mBAET,CACF,EAEAG,EAAOQ,qBAAuB,WACxBzB,KAAK0B,kBACP1B,KAAK0B,kBAET,EAGAT,EAAOD,UAAY,SAAmBtC,GACpC,IAAIiD,EAAS3B,KAETA,KAAKK,cAAgB3B,IACvBsB,KAAK0B,iBAAmBzE,EAAsByB,GAAK,WACjD,IAAIkD,EAAe3G,EAAa0G,EAAO1I,OAElC0I,EAAOpB,MAAMD,WAAiD,mBAA7BqB,EAAO1I,MAAMmI,aACjDO,EAAO1I,MAAMmI,YAAY,CACvBC,UAAWO,IAQfD,EAAOR,SAAS,CACdb,WAAW,IACV,WACDqB,EAAOR,SAAS,CACdX,UAAWoB,EAKXnB,aAAckB,EAAOhB,SAASY,UAAWI,EAAOhB,SAASY,QAAQM,aAErE,GACF,IAEJ,EAEAZ,EAAOH,kBAAoB,WA/SD,IAA+B7H,EACrDC,EACAgC,EAFqDjC,EAgTjC+G,KAAK/G,MA/SzBC,EAAiBF,EAAaC,IAC9BiC,EAAWf,EAAiBjB,MAG9B6B,EAAWG,IAAY,GA4SvB8E,KAAKmB,SAAS,CACZX,WAAW,IAGTR,KAAK/G,MAAMgG,QACbe,KAAK/G,MAAMgG,QAEf,EAEAgC,EAAOa,OAAS,WACd,IAAIC,EAAgB/I,EAAagH,KAAK/G,OAClCiF,EAAQ6D,EAAc7D,MACtBC,EAAM4D,EAAc5D,IACpB6D,EAAYD,EAAcC,UAC1BC,EAAsBF,EAAc/C,MACpCA,OAAgC,IAAxBiD,EAAiC,CAAC,EAAIA,EAC9CC,EAAwBH,EAAcI,SACtCA,OAAqC,IAA1BD,EAAmC,CAAC,EAAIA,EACnDE,EAAwBL,EAAcM,iBACtCA,OAA6C,IAA1BD,EAAmC,CAAC,EAAIA,EAC3DE,EAAuBP,EAAcO,qBACrC9I,EAAQuI,EAAcvI,MACtBD,EAAQwI,EAAcxI,MACtBgJ,EAAkBR,EAAcQ,gBAChCC,EAAiBT,EAAcS,eAC/BC,EAAMV,EAAcU,IACpBC,EAAWX,EAAcW,SACzBjJ,EAAUsI,EAActI,QACxB8E,EAAYwD,EAAcxD,UAE1B5C,EAAgBnC,GAASD,EAE7B,IAAKoC,EACH,OAAO,KAGT,IAAIgH,GAAqC,IAAtB3C,KAAKO,MAAMH,QAAoBJ,KAAKO,MAAMC,UACzDoC,GAAqC,IAAtB5C,KAAKO,MAAMH,SAAoBJ,KAAKO,MAAME,UACzDoC,GAAa,EAAIjK,EAAUO,SAAS,CACtC2J,QAASH,EAAe,EAAI,EAC5BI,WAAYH,EAAe,WAAaJ,EAAiB,KAAO,QAC/DL,GACCa,EAAqC,kBAApBT,EAAgC,YAAcA,EAC/DU,EAAiB,CACnBC,gBAAiBV,EAAiB,MAEhCW,GAAwB,EAAIvK,EAAUO,SAAS,CACjD2J,QAAS9C,KAAKO,MAAMC,UAAY,EAAI,GACnCoC,GAAgBK,EAAgBd,EAAUE,GACzCe,EAAwB,CAC1BlF,MAAOA,EACPC,IAAM6B,KAAKO,MAAMD,UAAkB,GAANnC,EAC7Ba,MAAOmE,EACPnB,UAAWM,EACXI,SAAUA,GAKRhI,EAASsF,KAAKO,MAAMG,WAAgCpG,EAAkBqB,GAArCA,EAAc,GAEnD,GAAInC,EACF,OAAoBX,EAAOM,QAAQ4C,cAAc0G,EAAK,CACpDT,WAAYA,GAAwB,IAAM,wBAC1ChD,OAAO,EAAIpG,EAAUO,SAAS,CAC5BiG,SAAU,WACViE,SAAU,SACVC,SAAU5I,EAAM4I,SAAW5I,EAAM4I,SAAW,KAAO,KACnDC,UAAW7I,EAAM6I,UAAY7I,EAAM6I,UAAY,KAAO,MACrDvE,GACHN,IAAKsB,KAAKgB,UACV/E,IAAK,SAAWuH,KAAKC,UAAU/I,EAAMmB,SACvBhD,EAAOM,QAAQ4C,cAAc0G,EAAK,CAChD,eAAe,EACfzD,MAAO,CACLZ,MAAO,OACPsF,cAAe,IAAMhJ,EAAMiJ,YAAc,OAEzCX,GAAwBnK,EAAOM,QAAQ4C,cAAc0G,EAAK,CAC5D,eAAe,EACfvE,MAAOA,EACPc,OAAO,EAAIpG,EAAUO,SAAS,CAC5BoJ,gBAAiBS,EACjB5D,SAAU,WACVC,IAAK,EACLuE,OAAQ,EACRd,QAAU9C,KAAKO,MAAMC,UAAgB,EAAJ,EACjCqD,MAAO,EACPvE,KAAM,GACLsD,GAAgBK,KACjBvI,EAAMmC,QAAuBhE,EAAOM,QAAQ4C,cAAcyC,EAAa,CACzEK,YAAY,EACZH,IAAKsB,KAAKa,eACVtG,IAAKG,EAAMmC,OACX+B,YAAawE,EACbzH,cAAeA,EACfgD,gBAAiBhC,IACfjC,EAAMgC,WAA0B7D,EAAOM,QAAQ4C,cAAcyC,EAAa,CAC5EK,YAAY,EACZH,IAAKsB,KAAKa,eACVtG,IAAKG,EAAMgC,UACXkC,YAAawE,EACbzH,cAAeA,EACfgD,gBAAiBnC,IACfwD,KAAKO,MAAMD,WAA0BzH,EAAOM,QAAQ4C,cAAc,UAAW,KAAML,EAAqBC,GAA6B9C,EAAOM,QAAQ4C,cAAcgD,EAAK,CACzKZ,IAAKA,EACLD,MAAOA,EACP7E,MAAOqB,EAAMrB,MACbkB,IAAKG,EAAMH,IACX+D,YAAa0B,KAAK/G,MAAMqF,YACxBzC,OAAQnB,EAAMmB,OACdmD,MAAO6D,EACPnE,IAAKsB,KAAKW,SACV1B,OAAQe,KAAKc,kBACb5B,QAASc,KAAK/G,MAAMiG,QACpBwD,SAAUA,EACVjJ,QAASA,EACT8E,UAAWA,KACRyB,KAAKG,aAA4BtH,EAAOM,QAAQ4C,cAAc,WAAY,CAC7E+H,wBAAyB,CACvBC,OAAQ9F,GAAY,EAAIrF,EAAUO,SAAS,CACzCgF,IAAKA,EACLD,MAAOA,EACPzE,QAASA,GACRiB,EAAO,CACRiB,cAAeA,SAMvB,GAAIpC,EAAO,CACT,IAAIyK,GAAW,EAAIpL,EAAUO,SAAS,CACpCiG,SAAU,WACViE,SAAU,SACVY,QAAS,eACT7F,MAAO1D,EAAM0D,MACbC,OAAQ3D,EAAM2D,QACbW,GAMH,MAJsB,YAAlBA,EAAMiF,gBACDD,EAASC,QAGEpL,EAAOM,QAAQ4C,cAAc0G,EAAK,CACpDT,WAAYA,GAAwB,IAAM,wBAC1ChD,MAAOgF,EACPtF,IAAKsB,KAAKgB,UACV/E,IAAK,SAAWuH,KAAKC,UAAU/I,EAAMmB,SACpCmH,GAAwBnK,EAAOM,QAAQ4C,cAAc0G,EAAK,CAC3D,eAAe,EACfvE,MAAOA,EACPc,OAAO,EAAIpG,EAAUO,SAAS,CAC5BoJ,gBAAiBS,EACjB5E,MAAO1D,EAAM0D,MACb0E,QAAU9C,KAAKO,MAAMC,UAAgB,EAAJ,EACjCnC,OAAQ3D,EAAM2D,QACbuE,GAAgBK,KACjBvI,EAAMmC,QAAuBhE,EAAOM,QAAQ4C,cAAcyC,EAAa,CACzEK,YAAY,EACZH,IAAKsB,KAAKa,eACVtG,IAAKG,EAAMmC,OACX+B,YAAawE,EACbzH,cAAeA,EACfgD,gBAAiBhC,IACfjC,EAAMgC,WAA0B7D,EAAOM,QAAQ4C,cAAcyC,EAAa,CAC5EK,YAAY,EACZH,IAAKsB,KAAKa,eACVtG,IAAKG,EAAMgC,UACXkC,YAAawE,EACbzH,cAAeA,EACfgD,gBAAiBnC,IACfwD,KAAKO,MAAMD,WAA0BzH,EAAOM,QAAQ4C,cAAc,UAAW,KAAML,EAAqBC,GAA6B9C,EAAOM,QAAQ4C,cAAcgD,EAAK,CACzKZ,IAAKA,EACLD,MAAOA,EACPE,MAAO1D,EAAM0D,MACbC,OAAQ3D,EAAM2D,OACdhF,MAAOqB,EAAMrB,MACbkB,IAAKG,EAAMH,IACX+D,YAAa0B,KAAK/G,MAAMqF,YACxBzC,OAAQnB,EAAMmB,OACdmD,MAAO6D,EACPnE,IAAKsB,KAAKW,SACV1B,OAAQe,KAAKc,kBACb5B,QAASc,KAAK/G,MAAMiG,QACpBwD,SAAUA,EACVjJ,QAASA,EACT8E,UAAWA,KACRyB,KAAKG,aAA4BtH,EAAOM,QAAQ4C,cAAc,WAAY,CAC7E+H,wBAAyB,CACvBC,OAAQ9F,GAAY,EAAIrF,EAAUO,SAAS,CACzCgF,IAAKA,EACLD,MAAOA,EACPzE,QAASA,GACRiB,EAAO,CACRiB,cAAeA,QAIvB,CAEA,OAAO,IACT,EAEOiE,CACT,CAzSyB,CAySvB/G,EAAOM,QAAQ+K,WAEjBtE,EAAMuE,aAAe,CACnB/D,QAAQ,EACRoC,eAAgB,IAChBrE,IAAK,GACLsE,IAAK,MAGLhJ,QAAS,QAGX,IAAI2K,EAActL,EAAWK,QAAQkL,MAAM,CACzCjG,MAAOtF,EAAWK,QAAQmL,OAAOC,WACjClG,OAAQvF,EAAWK,QAAQmL,OAAOC,WAClChK,IAAKzB,EAAWK,QAAQ7B,OAAOiN,WAC/B1I,OAAQ/C,EAAWK,QAAQ7B,OAAOiN,WAClC1H,OAAQ/D,EAAWK,QAAQ7B,OAC3BoF,UAAW5D,EAAWK,QAAQ7B,OAC9BkN,QAAS1L,EAAWK,QAAQ7B,OAC5BwE,WAAYhD,EAAWK,QAAQ7B,OAC/BwC,MAAOhB,EAAWK,QAAQ7B,SAGxBmN,EAAc3L,EAAWK,QAAQkL,MAAM,CACzCV,YAAa7K,EAAWK,QAAQmL,OAAOC,WACvChK,IAAKzB,EAAWK,QAAQ7B,OAAOiN,WAC/B1I,OAAQ/C,EAAWK,QAAQ7B,OAAOiN,WAClClL,MAAOP,EAAWK,QAAQ7B,OAAOiN,WACjC1H,OAAQ/D,EAAWK,QAAQ7B,OAC3BoF,UAAW5D,EAAWK,QAAQ7B,OAC9BkN,QAAS1L,EAAWK,QAAQ7B,OAC5BwE,WAAYhD,EAAWK,QAAQ7B,OAC/BwC,MAAOhB,EAAWK,QAAQ7B,OAC1BgM,SAAUxK,EAAWK,QAAQmL,OAC7Bf,UAAWzK,EAAWK,QAAQmL,SAGhC,SAASI,EAAoBC,GAC3B,OAAO,SAAU1L,EAAO2L,EAAUC,GAChC,IAAIC,EAEJ,IAAK7L,EAAMM,QAAUN,EAAMO,MACzB,MAAM,IAAIuL,MAAM,yDAA2DF,EAAgB,6CAG7F/L,EAAWK,QAAQ6L,iBAAgBF,EAAwB,CAAC,GAAyBF,GAAYD,EAAmBG,GAAwB7L,EAAO,OAAQ4L,EAC7J,CACF,CAMAjF,EAAMH,UAAY,CAChBrG,YAAagL,EACb/K,MAAOoL,EACPlL,MAAOmL,EAAoB5L,EAAWK,QAAQ8L,UAAU,CAACb,EAAatL,EAAWK,QAAQ+L,QAAQd,MACjG5K,MAAOkL,EAAoB5L,EAAWK,QAAQ8L,UAAU,CAACR,EAAa3L,EAAWK,QAAQ+L,QAAQT,MACjGrE,OAAQtH,EAAWK,QAAQgM,KAC3B3C,eAAgB1J,EAAWK,QAAQmL,OACnCpG,MAAOpF,EAAWK,QAAQ7B,OAC1B6G,IAAKrF,EAAWK,QAAQ7B,OACxB0K,UAAWlJ,EAAWK,QAAQ8L,UAAU,CAACnM,EAAWK,QAAQ7B,OAAQwB,EAAWK,QAAQuG,SAEvFpG,SAAUR,EAAWK,QAAQgM,KAC7B7G,YAAaxF,EAAWK,QAAQ8L,UAAU,CAACnM,EAAWK,QAAQ7B,OAAQwB,EAAWK,QAAQgM,OACzFnG,MAAOlG,EAAWK,QAAQuG,OAC1ByC,SAAUrJ,EAAWK,QAAQuG,OAC7B2C,iBAAkBvJ,EAAWK,QAAQuG,OACrC4C,qBAAsBxJ,EAAWK,QAAQ7B,OACzCiL,gBAAiBzJ,EAAWK,QAAQ8L,UAAU,CAACnM,EAAWK,QAAQ7B,OAAQwB,EAAWK,QAAQgM,OAC7FlG,OAAQnG,EAAWK,QAAQwG,KAC3BT,QAASpG,EAAWK,QAAQwG,KAC5ByB,YAAatI,EAAWK,QAAQwG,KAChC8C,IAAK3J,EAAWK,QAAQ7B,OACxBoL,SAAU5J,EAAWK,QAAQ7B,OAC7BmC,QAASX,EAAWK,QAAQiM,MAAM,CAAC,OAAQ,OAAQ,UACnD7G,UAAWzF,EAAWK,QAAQgM,K,6oBChHP9G,IAAAA,EC/lBe,WD+lBfA,MC/lBe,mEAERhD,SAAAA,EA2L5BgK,SAAAA,EAgBFC,EACAC,EACAC,EACA/L,EACAuF,GA4BA,YA5BAA,IAAAA,IAAAA,EAAuB,CAAC,GAajBA,EAAAA,CAAAA,EAKFwG,EAAAA,CACH/L,QAAAA,EACAgM,WAAYH,EACZ,kBAAkB,GAClBtG,MAAM,EAANA,CAAAA,EACKA,EAAAA,CACH8D,QAASyC,EAAW,EAAI,iBAa5BG,EACAH,EACAI,EACAvH,EACAC,EACAkE,EACAhD,EACAC,GAEA,MAAoC,CAAC,EAEjC+C,IACFqD,EAAarD,gBAAkBA,EAAAA,UAE3BoD,GACFC,EAAaxH,MAAQA,EACrBwH,EAAavH,OAASA,EACtBuH,EAAarD,gBAAkBA,EAC/BqD,EAAaxG,SAAAA,aAAAA,gBACJuG,GAAAA,cAMAA,KALTC,EAAaxG,SAAAA,WACbwG,EAAavG,IAAM,EACnBuG,EAAatG,KAAO,EACpBsG,EAAahC,OAAS,EACtBgC,EAAa/B,MAAQ,IAUrBtE,IACFqG,EAAarG,UAAYA,GAGvBC,IACFoG,EAAapG,eAAiBA,GAEhC,WACKkG,EAAAA,CACH,eAAc,EACd,yBAAyB,GACzB1G,MAAM,EAANA,CACE8D,QAASyC,EAAW,EAAI,EACxBxC,WAAW,wBACR6C,KAeP,OAJIxH,CAAAA,CAgF8CyH,IC5T7CC,ED4T6CD,EAAAA,CAAAA,YAAAA,EE9UE,SF8UFA,GE3UlDxH,IAFAsH,EAAAA,EADmEA,OAEnEvH,EAAAA,EAFmEA,MAGnEC,EAAAA,EAHmEA,OAKnE,oBAAIsH,EAAAA,EAAAA,cAAAA,MAAAA,CAAAA,eAAAA,EAEiB3G,MAAO,CAAE+G,WAAgB1H,EAASD,EAAS,2BAI5DuH,EAAAA,EAAAA,cAAAA,MAAAA,CAEK3G,MAAO,CAAEsE,SAAUlF,EAAO6F,QAAQ,UACrC+B,EAAAA,cAAAA,MAAAA,CACE7H,IAAI,GACJ8H,KAAK,6BACO,OACZ1L,IAAAA,mDAAwD8D,EAAAA,YAAkBD,EAAAA,kEAC1EY,MAAO,CACLsE,SAAS,OACTW,QAAQ,QACR7E,SAAS,aAATA,IAAAA,EAAAA,EAWV,SAAA8G,GAAAA,IAAyBC,EAAAA,EAAFA,SAAelN,EAAAA,EAAAA,EAAAA,GACpC,uBACG+C,EAAAA,SAAAA,KACCgK,EAAAA,cAACI,EAAAA,EAAAA,CAAAA,EAAUnN,IACVkN,EAEmC,+FDtEC,SAAAE,GAAAA,IAC3C9L,EAIAkL,EAL0DlL,IAE1DsB,EAGA4J,EAL0D5J,OAG1DpC,EAEAgM,EAL0DhM,QAAAA,EAK1DgM,EAL0DtH,IAI1DA,OAAAA,IAAAA,EAAAA,GAAAA,EACAsH,EAAAA,EAL0DA,WAMvDxM,EAAAA,EAAAA,EAAAA,GAEH,kCAEQA,EAAAA,CACJqN,SAAS,QACT7M,QAASA,EACTc,IAAKkL,EAAalL,OAAAA,EAAMgM,WACbd,OAAAA,EAAalL,EACxBsB,OAAQ4J,EAAa5J,OAAAA,EAAS0K,cAChBd,OAAAA,EAAa5J,EAC3BsC,IAAKA,IAAAA,EAAAA,EAKoC,SAAAkI,GAAAA,IAC7CG,EAEaH,EAHiDG,SAAAA,EAGjDH,EAHiDR,QAE9DA,OAAAA,IAAAA,EAAU,OACGQ,EAHiDZ,WAG9DA,OAAAA,IAAAA,GAAa,EACVxM,EAAAA,EAAAA,EAAAA,GAEH,EAAcA,EAAMI,QAAAA,MAASmN,OAAAA,EAAAA,EAAUnN,OAAAA,EAErC2M,EAAAA,cAACpG,EAAAA,EAAAA,CAAAA,EAAU3G,EAAWuN,EAAAA,CAAUnN,MAAOA,EAAOoM,WAAYA,KAG5D,OAAKI,EAAQ3O,OAAAA,EAAAA,cAAAA,UAAAA,KAMR2O,EAAQ9O,KAAI,gBAAG+C,EAAAA,EAAAA,MAAO+B,EAAAA,EAAAA,OAAQK,EAAAA,EAAAA,KAAAA,OAC7B8J,EAAAA,cAAAA,SAAAA,CACE/J,IAAQnC,EAAAA,IAASoC,EAAAA,IAAQL,EACzBK,KAAMA,EACNpC,MAAOA,EACP+B,OAAQ4J,EAAa5J,OAAAA,EAAS0K,cAChBd,OAAAA,EAAa5J,EAC3BxC,MAAOA,GAAAA,IAGVyM,GAAAA,CAAAA,EAKPlG,EAAMH,UAAY,CAChBlF,IAAKkM,EAAAA,OAAAA,WACLtI,IAAKsI,EAAAA,OAAAA,WACLpN,MAAOoN,EAAAA,OACP5K,OAAQ4K,EAAAA,OACRhB,WAAYgB,EAAAA,MAGdC,EAAQC,YAAAA,UACRD,EAAQjH,UAAY,CAClBtB,IAAKsI,EAAAA,OAAAA,WACLhB,WAAYgB,EAAAA,KACZD,SAAUC,EAAAA,MAAgB,CACxBlM,IAAKkM,EAAAA,OAAAA,WACL5K,OAAQ4K,EAAAA,OACRpN,MAAOoN,EAAAA,SAETZ,QAASY,EAAAA,QACPA,EAAAA,UAAoB,CAClBA,EAAAA,MAAgB,CACd3M,MAAO2M,EAAAA,OAAAA,WACPvK,KAAMuK,EAAAA,OACNpN,MAAOoN,EAAAA,OACP5K,OAAQ4K,EAAAA,OAAAA,aAEVA,EAAAA,MAAgB,CACd3M,MAAO2M,EAAAA,OACPvK,KAAMuK,EAAAA,OAAAA,WACNpN,MAAOoN,EAAAA,OACP5K,OAAQ4K,EAAAA,OAAAA,iBAA2BlC,IAAAA,EAAAA,CAAAA,YAAAA,EE5GzC,SAAA8B,GAAAA,IAAuBG,EAAAA,EAAFA,SAAevN,EAAAA,EAAAA,EAAAA,GAClC,OAAIuN,EAAAA,EAAAA,cAECE,EAAAA,EAAAA,CAAAA,EACKzN,EAAAA,CACJuN,SAAU,CACRjM,IAAKiM,GAAAA,eAAAA,EAGPrI,IAAI,iCAIQlF,GAAAA,EAItBuF,EAAYmI,YAAAA,cACZnI,EAAYiB,UAAY,CACtB+G,SAAUC,EAAAA,OACVZ,QAAQ,OAARA,EAASa,EAAQjH,gBAAAA,EAARmH,EAAmBf,QAC5B1H,IAAK,SAAUlF,EAAO2L,EAAUC,GAC9B,OAAK5L,EAAM2L,GAAAA,IAAAA,MAAAA,iBAKSA,EAAAA,kBAA4BC,EAAAA,yBAAAA,IAAAA,GChCvCgC,IAAAA,EAAoC,SAAmB5N,GAClE,uCAEI+M,EAAAA,cAACU,EAAAA,EAAAA,CAAAA,EAAYzN,IACb+M,EAAAA,cAAAA,WAAAA,KACEA,EAAAA,cAACU,EAAAA,EAAAA,CAAAA,EAAYzN,EAAAA,CAAOwM,YAAAA,MAAY,EAMxCoB,EAAUF,YAAAA,YACVE,EAAUpH,UAAYiH,EAAQjH,UAAAA,ICY9B,IDZ8BA,EE2G2B,SACvDxG,EACA2L,EACAC,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OACGiC,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,OAEE7N,EAAMkF,KAAAA,KAAOlF,EAAMkF,IAAAA,IAAAA,OAAAA,MAAAA,IAAAA,CAMAlF,EAAO2L,EAAUC,GAAAA,OAAkBiC,IAAAA,IAAAA,MAAAA,iCAJtBjC,EAAAA,0JAAAA,EAAAA,EAOd,CACvBnK,MAAO+L,IAAAA,OAAAA,WACPtI,IAAK4I,GAAAA,EAAAA,CAAAA,KAAAA,QAAAA,QAAAA,kBAAAA,YAAAA,QAAAA,cAAAA,SAAAA,WAAAA,EAAAA,CAAAA,QAAAA,aAAAA,EDjHY,IAAIC,IAkCvB,EAAkD,SAAAC,GAAAA,IAAAA,EAShD/H,EAT6EgI,GAC7EA,OAAAA,IAAAA,EAAAA,MAAAA,EACAxM,EAOAwE,EAT6ExE,MAG7EsE,EAMAE,EAT6EF,MAI7EuD,EAKArD,EAT6EqD,gBAK7EP,EAIA9C,EAT6E8C,UAMtEmF,EAGPjI,EAHAkI,MACAhG,EAEAlC,EAT6EkC,YAQ7EnC,EACAC,EAT6ED,OAS7EC,EAAAA,EAT6EA,QAU1EjG,EAAAA,EAAAA,EAAAA,GAEKmF,EAA0B1D,EAA5B0D,MAASC,EAAmB3D,EAA5B2D,OAAiBsH,EAAWjL,EAA5BiL,OAA4BjL,EAAAA,SLOlC0D,EACAC,EACAsH,GAIA,MAAoC,CAAC,EAErC,yBAmBA,MAdetC,UAGXsC,GACFC,EAAaxH,MAAQA,EACrBwH,EAAavH,OAASA,GAAAA,gBACbsH,IAKT3D,EAAAA,yDAGK,CACLA,UAAAA,EACA,4BAA4B,GAC5BhD,MAAO4G,EAAAA,CKrCyBlL,CAKd0D,EAAOC,EAAQsH,GAH1B0B,EACIC,EADXtI,MACWsI,EAAAA,EAAXtF,UACGuF,EAAAA,EAAAA,EAAAA,GAAAA,GAEQC,EAAAA,EAAAA,UAAAA,GACIC,EAAAA,EAAAA,UAAQ,kBAAMjE,KAAKC,UAAU/I,EAAM8K,OAAAA,GAAS,CAAC9K,EAAM8K,SAGhE2B,IACFnF,EAAYmF,GAGd,eHxCAxB,EACAvH,EACAC,GAEA,SAWA,MAAM,cAVFsH,IACF+B,EAAAA,+CACGrJ,EAASD,EAAS,kCAInBuH,IACF+B,EAAAA,0BAAkCtJ,EAAAA,iIAAqIC,EAAAA,YAAkBD,EAAAA,yIAAAA,CAAAA,CG4B3L,CAAuBuH,EAAQvH,EAAOC,GA+HtC,OA7HAsJ,EAAAA,EAAAA,YAAU,WACHC,IACHA,EAA6BC,QAAAA,IAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,OAAAA,KAAAA,EAAAA,KAAAA,EAAAA,OAAyBC,MACpD,gBAAGC,EAAAA,EAAAA,oBAAqBC,EAAAA,EAAAA,qBAAAA,OACtBC,EAAcF,EAEP,CACLA,oBAAAA,EACAC,qBAAAA,EAAAA,KAQR,IA4CA,IA5CA,EAAiBE,EAAK3G,QAAQ4G,cAAc,2BAG5C,OAAIC,GAAYjN,KACViN,EAAS5G,UAAAA,MAEXJ,GAAAA,EAAc,CACZC,WAAU,IAAC,MAEbpC,GAAAA,EAAS,CACPoC,WAAU,IAIZgH,YAAW,WACTD,EAASE,gBAAgB,wBAAhBA,GACR,WAEHlH,GAAAA,EAAc,CACZC,WAAU,IAGZ+G,EAASG,iBAAiB,QAAQ,SAAS,IACzCH,EAASI,oBAAoB,OAAQC,GAAAA,MAErCxJ,GAAAA,EAAS,CACPoC,WAAU,IAGZgH,YAAW,WACTD,EAASE,gBAAgB,wBAAhBA,GACR,YAIPvN,EAAW2N,IAAIxN,IAKb+M,GAAelN,EAAWwC,IAAIrC,QAAlC,GAMA0M,EAA2BE,MACzB,YAAwBE,IAArBD,EAAAA,EAAAA,oBAAqBC,EAAAA,EAAAA,qBACjBE,EAAK3G,UAIV2G,EAAK3G,QAAQoH,UAAYZ,EAAAA,EAAAA,CACvBzC,WAAU,EACVC,SAAUxK,EAAWwC,IAAIrC,GACzBR,MAAAA,GACGzB,IAGA8B,EAAWwC,IAAIrC,KAClB0N,EAAiBC,uBAAsB,WACjCX,EAAK3G,UACPuH,EAAkBd,EAChBE,EAAK3G,QACLrG,EACAH,EACAiE,EACAoC,EACAnC,EACAC,GAAAA,KAAAA,IASL,WACD0J,GACFG,qBAAqBH,GAEnBE,GACFA,GAAAA,EAAAA,GAGH,CAACpO,KAGJsO,EAAAA,EAAAA,kBAAgB,WACVjO,EAAWwC,IAAIrC,IAAa+M,IAC9BC,EAAK3G,QAAQoH,UAAYV,EAAAA,EAAAA,CACvB3C,UAAWvK,EAAWwC,IAAIrC,GAC1BqK,SAAUxK,EAAWwC,IAAIrC,GACzBR,MAAAA,GACGzB,IAAAA,MAILmI,GAAAA,EAAc,CACZC,WAAU,IAAC,MAEbpC,GAAAA,EAAS,CACPoC,WAAU,IAAC,GAGd,CAAC3G,KAAAA,EAAAA,EAAAA,eAGiBwM,EAAAA,EAAAA,CAAAA,EAChBK,EAAAA,CACHvI,MAAM,EAANA,CAAAA,EACKqI,EACArI,EAAAA,CACHuD,gBAAAA,IAEFP,UAAcsF,GAAStF,EAAAA,IAAgBA,EAAAA,IACvCtD,IAAKwJ,EACLpE,wBAAyB,CACvBC,OAAQ2D,GAEVuB,0BAAyB,IAAC,KAIkCC,EAAAA,EAAAA,OAC9D,SAAqBjQ,GACnB,OAAKA,EAAMyB,OASDyO,EAAAA,EAAAA,eAKWC,EAAqBnQ,GAZ9BkQ,IAAAA,IAgBhBE,EAAY5J,UAAYA,EACxB4J,EAAY1C,YAAAA,cAAAA,IEtOV0C,EFsOU1C,EAAAA,CAAAA,MAAAA,cAAAA,UAAAA,QAAAA,SAAAA,cAAAA,mBAAAA,cAAAA,UAAAA,UAAAA,mBAAAA,aAAAA,aAAAA,cAAAA,cAAAA,iBAAAA,cAAAA,wBAAAA,EExL6C,SACvD1N,EACA2L,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OACGkC,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,MAAAA,cAGD7N,EAAM0M,QAAAA,UACLf,GAAAA,WAAwBA,IACzB3L,EAAM2L,GAAAA,IAAAA,OAAAA,MAAAA,IAAAA,CAMgB3L,EAAO2L,GAAAA,OAAakC,IAAAA,IAAAA,MAAAA,IAHpClC,EAAAA,KAAa3L,EAAM2L,GAAAA,+CAAAA,EAAAA,EAMR,IAAIoC,IAAI,CAAC,QAAD,8BAEJ,CACvBzM,IAAKkM,IAAAA,OAAAA,WACLtI,IAAK4I,EACL3I,MAAOkL,EACPjL,OAAQiL,EACRjQ,MAAOoN,IAAAA,OACPd,OAAS1M,SAAAA,GACP,YAAIA,EAAM0M,SAGN4D,EAAahM,IAAItE,EAAM0M,QAI3B,OAAO,IAAIZ,MAAM,iBACE9L,EAAM0M,OAAAA,qHAAAA,GAAAA,GAhF3B0D,ECLgBG,EDOT,SAAP,OACEjP,EAEAkP,EAH0BlP,IAEbmP,EACbD,EADAE,YACAF,EAAAA,EAH0BA,QAsBvBxQ,EAAAA,EAAAA,EAAAA,GAMH,OAJIwQ,GACFG,QAAQT,KAAKM,GAGXC,EAAAA,EAAAA,cACML,EAAAA,EAAAA,CAAY3O,MAAOgP,GAAezQ,KAE5C2Q,QAAQT,KAAK,mBAAoB5O,GAEvB4O,KAAAA,GCtCdU,EAAYlD,YAAAA,cACZkD,EAAYpK,UAAYA,C,4FC4CxB,EA5De,SAAH,GAAgC,IAA1BqK,EAAQ,EAARA,SAAU3D,EAAQ,EAARA,SAEpB4D,EADcC,oBACDF,EAASG,UAGfC,EAAAA,EAAAA,gBAAe,cAqBHC,kBAkBzB,OACE,uBAAKnI,UAAU,iBAAiB,oBAAmB+H,GACjD,0BAAQ/H,UAAU,iBAChB,gBAAC,EAAAoI,KAAI,CAACC,GAAG,KAAG,kBAEd,uBAAKrI,UAAU,iBACb,4BAAOmE,GACP,4DAEE,qBAAGmE,KAAK,+BAKlB,C,sEClDMC,EAAM,SAAH,GAA4C,IAAD,MAArCC,EAAW,EAAXA,YAAaC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMxM,EAAK,EAALA,MAC9ByM,GAAST,EAAAA,EAAAA,gBAAe,cAAxBS,KAgBFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YACnDM,EAAgC,QAApB,EAAGH,EAAKE,oBAAY,aAAjB,EAAmB3M,MAExC,OACE,gBAAC,IAAM,CACL6M,eAAgB,CACdN,KAAAA,GAEFvM,MAAOA,EACP8M,cAAeF,EAAY,QAAWA,EAAiB,KACvDJ,KAAM,CACJ,CACEO,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAAShN,GAEX,CACEiN,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAP,EAAKE,oBAAY,OAAQ,QAAR,EAAjB,EAAmBO,cAAM,WAAR,EAAjB,EAA2BC,UAAO,IAE7C,CACEJ,KAAK,gBACLC,QAAShN,GAEX,CACE+M,KAAK,sBACLC,QAASN,GAEX,CACEK,KAAK,2BACLC,QAAS,gDAEXvR,OAAO+Q,IAGf,EAEAH,EAAIpG,aAAe,CACjBsG,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K,mHCrCA,EA9CY,WAAO,IAAD,IACVc,GAAOpB,EAAAA,EAAAA,gBAAe,cAiBS,QAAzB,EAAGoB,EAAKX,KAAKE,oBAAY,OAAtB,EAAwBU,OACF,QAAzB,EAAGD,EAAKX,KAAKE,oBAAY,OAAtB,EAAwBO,OAEvC,OACE,uBAAKpJ,UAAU,OACb,gBAAC,EAAAwJ,EAAW,CACVxJ,UAAU,aACV2D,OAAO,QACP8F,QAAS,CAAC,OAAQ,OAAQ,QAC1BlR,IAAI,yBACJ6D,MAAO,GACPC,OAAQ,GACRqN,QAAS,GACTvN,IAAI,kBAAiB,sBAEvB,yCAWN,E,oBClDWwN,EAAW,+BACXC,EAAiB,qCACjBC,EAAe,mCCuE1B,G,QArEiB,SAAH,GAA4B,IAAD,EAArBP,EAAI,EAAJA,KAAMxB,EAAQ,EAARA,SAClBgC,EAAQR,EAAKQ,MAAMC,MAAM9U,QAC7B,SAAA+U,GAAI,OAAiC,IAA7BA,EAAKC,YAAYC,OAAgB,IAE3CtC,QAAQuC,IAAI,QAASL,GACrB,IAAMM,EAAad,EAAKc,WAExB,OAAqB,IAAjBN,EAAM5U,OAEN,gBAAC,IAAM,CAAC4S,SAAUA,GAChB,gBAAC,IAAG,CAAC5L,MAAM,cACX,gBAAC,EAAG,MACJ,iDAMJ,gBAAC,IAAM,CAAC4L,SAAUA,GAChB,gBAAC,IAAG,CAAC5L,MAAM,cACX,gBAAC,EAAG,MACJ,uBAAK8D,UDnBW,gCCoBd,uBAAKA,UAAWqK,GACd,gBAAC,EAAAjC,KAAI,CAACC,GAAE,KACN,wBAAMrI,UAAWqK,GAAkB,MACnC,wBAAMrK,UAAWqK,GAAsBD,EAAWE,cAGvC,QADT,EACLF,EAAWG,WAAG,aAAd,EAAgBxV,KAAI,SAAAyV,GAAG,OACtB,uBAAKxK,UAAWqK,GACd,gBAAC,EAAAjC,KAAI,CAACC,GAAE,IAAMmC,EAAIvB,MAChB,wBAAMjJ,UAAWqK,GAAkB,KAAIG,EAAIvB,MAC3C,wBAAMjJ,UAAWqK,GAAsBG,EAAIF,aAEzC,KAGV,uBAAKtK,UDtCY,iCCuCd8J,aAAK,EAALA,EAAO/U,KAAI,SAACiV,EAAMtU,GAAO,IAAD,QACvB,OACE,uBAAKuE,IAAKvE,EAAGsK,UD/CP,4BCgDJ,uBAAKA,UDtCI,iCCwCP,uBACEzH,IAAG,IAA2B,QAA3B,EAAKyR,EAAKC,YAAYvR,aAAK,OAAiB,QAAjB,EAAtB,EAAwB+R,uBAAe,OAAO,QAAP,EAAvC,EAAyCjT,aAAK,WAAxB,EAAtB,EAAgDe,QAI5D,uBAAKyH,UDtDO,oCCuDV,wBAAMA,UAAWqK,GACf,wBAAMrK,UAAWqK,GAAkB,UACN,QAArB,EAAAL,EAAKC,YAAYS,YAAI,aAArB,EAAwB,KAAM,MAGxC,qBAAG1K,UD3Da,0CC4Dd,gBAAC,EAAAoI,KAAI,CAACC,GAAE,GAAK2B,EAAKW,OAAOC,KAAQlK,SAAS,OACvCsJ,EAAKC,YAAY/N,QAGtB,6BAAQ8N,EAAKC,YAAYY,OAIjC,KAIR,E,kBC5EA,SAASC,IAYP,OAXA1U,EAAOC,QAAUyU,EAAWnW,OAAOC,OAASD,OAAOC,OAAOmK,OAAS,SAAUvD,GAC3E,IAAK,IAAI9F,EAAI,EAAGA,EAAIqV,UAAU7V,OAAQQ,IAAK,CACzC,IAAIsV,EAASD,UAAUrV,GACvB,IAAK,IAAIuE,KAAO+Q,EACVrW,OAAO0E,UAAU4R,eAAelN,KAAKiN,EAAQ/Q,KAC/CuB,EAAOvB,GAAO+Q,EAAO/Q,GAG3B,CACA,OAAOuB,CACT,EAAGpF,EAAOC,QAAQ6U,YAAa,EAAM9U,EAAOC,QAAiB,QAAID,EAAOC,QACjEyU,EAASK,MAAMnN,KAAM+M,UAC9B,CACA3U,EAAOC,QAAUyU,EAAU1U,EAAOC,QAAQ6U,YAAa,EAAM9U,EAAOC,QAAiB,QAAID,EAAOC,O,mBCFhGD,EAAOC,QAZP,SAAuC2U,EAAQI,GAC7C,GAAc,MAAVJ,EAAgB,MAAO,CAAC,EAC5B,IAEI/Q,EAAKvE,EAFL8F,EAAS,CAAC,EACV6P,EAAa1W,OAAO2W,KAAKN,GAE7B,IAAKtV,EAAI,EAAGA,EAAI2V,EAAWnW,OAAQQ,IACjCuE,EAAMoR,EAAW3V,GACb0V,EAASG,QAAQtR,IAAQ,IAC7BuB,EAAOvB,GAAO+Q,EAAO/Q,IAEvB,OAAOuB,CACT,EACgDpF,EAAOC,QAAQ6U,YAAa,EAAM9U,EAAOC,QAAiB,QAAID,EAAOC,O","sources":["webpack://gatsby-starter-blog/./node_modules/camelcase/index.js","webpack://gatsby-starter-blog/./node_modules/gatsby-image/index.js","webpack://gatsby-starter-blog/../src/image-utils.ts","webpack://gatsby-starter-blog/../src/components/hooks.ts","webpack://gatsby-starter-blog/../src/components/picture.tsx","webpack://gatsby-starter-blog/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-blog/../src/components/placeholder.tsx","webpack://gatsby-starter-blog/../src/components/main-image.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-blog/../src/components/static-image.server.tsx","webpack://gatsby-starter-blog/../src/components/static-image.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/home.module.css","webpack://gatsby-starter-blog/./src/pages/index.js","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/extends.js","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n  return string;\n};\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n  if (input.length === 0) {\n    return '';\n  }\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n  var hasUpperCase = input !== input.toLowerCase();\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _excluded = [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\", \"loading\", \"draggable\", \"ariaHidden\"];\n\nvar logDeprecationNotice = function logDeprecationNotice(prop, replacement) {\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  console.log(\"\\n    The \\\"\" + prop + \"\\\" prop is now deprecated and will be removed in the next major version\\n    of \\\"gatsby-image\\\".\\n    \");\n\n  if (replacement) {\n    console.log(\"Please use \" + replacement + \" instead of \\\"\" + prop + \"\\\".\");\n  }\n}; // Handle legacy props during their deprecation phase\n\n\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n  var resolutions = convertedProps.resolutions,\n      sizes = convertedProps.sizes,\n      critical = convertedProps.critical;\n\n  if (resolutions) {\n    convertedProps.fixed = resolutions;\n    logDeprecationNotice(\"resolutions\", \"the gatsby-image v2 prop \\\"fixed\\\"\");\n    delete convertedProps.resolutions;\n  }\n\n  if (sizes) {\n    convertedProps.fluid = sizes;\n    logDeprecationNotice(\"sizes\", \"the gatsby-image v2 prop \\\"fluid\\\"\");\n    delete convertedProps.sizes;\n  }\n\n  if (critical) {\n    logDeprecationNotice(\"critical\", \"the native \\\"loading\\\" attribute\");\n    convertedProps.loading = \"eager\";\n  } // convert fluid & fixed to arrays so we only have to work with arrays\n\n\n  if (convertedProps.fluid) {\n    convertedProps.fluid = groupByMedia([].concat(convertedProps.fluid));\n  }\n\n  if (convertedProps.fixed) {\n    convertedProps.fixed = groupByMedia([].concat(convertedProps.fixed));\n  }\n\n  return convertedProps;\n};\n/**\n * Checks if fluid or fixed are art-direction arrays.\n *\n * @param currentData  {{media?: string}[]}   The props to check for images.\n * @return {boolean}\n */\n\n\nvar hasArtDirectionSupport = function hasArtDirectionSupport(currentData) {\n  return !!currentData && Array.isArray(currentData) && currentData.some(function (image) {\n    return typeof image.media !== \"undefined\";\n  });\n};\n/**\n * Tries to detect if a media query matches the current viewport.\n * @property media   {{media?: string}}  A media query string.\n * @return {boolean}\n */\n\n\nvar matchesMedia = function matchesMedia(_ref) {\n  var media = _ref.media;\n  return media ? isBrowser && !!window.matchMedia(media).matches : false;\n};\n/**\n * Find the source of an image to use as a key in the image cache.\n * Use `the first image in either `fixed` or `fluid`\n * @param {{fluid: {src: string, media?: string}[], fixed: {src: string, media?: string}[]}} args\n * @return {string?} Returns image src or undefined it not given.\n */\n\n\nvar getImageCacheKey = function getImageCacheKey(_ref2) {\n  var fluid = _ref2.fluid,\n      fixed = _ref2.fixed;\n  var srcData = getCurrentSrcData(fluid || fixed || []);\n  return srcData && srcData.src;\n};\n/**\n * Returns the current src - Preferably with art-direction support.\n * @param currentData  {{media?: string}[], maxWidth?: Number, maxHeight?: Number}   The fluid or fixed image array.\n * @return {{src: string, media?: string, maxWidth?: Number, maxHeight?: Number}}\n */\n\n\nvar getCurrentSrcData = function getCurrentSrcData(currentData) {\n  if (isBrowser && hasArtDirectionSupport(currentData)) {\n    // Do we have an image for the current Viewport?\n    var foundMedia = currentData.findIndex(matchesMedia);\n\n    if (foundMedia !== -1) {\n      return currentData[foundMedia];\n    } // No media matches, select first element without a media condition\n\n\n    var noMedia = currentData.findIndex(function (image) {\n      return typeof image.media === \"undefined\";\n    });\n\n    if (noMedia !== -1) {\n      return currentData[noMedia];\n    }\n  } // Else return the first image.\n\n\n  return currentData[0];\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = Object.create({});\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props);\n  var cacheKey = getImageCacheKey(convertedProps);\n  return imageCache[cacheKey] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props);\n  var cacheKey = getImageCacheKey(convertedProps);\n\n  if (cacheKey) {\n    imageCache[cacheKey] = true;\n  }\n}; // Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\n\n\nvar hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nvar isBrowser = typeof window !== \"undefined\";\nvar hasIOSupport = isBrowser && window.IntersectionObserver;\nvar io;\nvar listeners = new WeakMap();\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (listeners.has(entry.target)) {\n          var cb = listeners.get(entry.target); // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n\n          if (entry.isIntersecting || entry.intersectionRatio > 0) {\n            io.unobserve(entry.target);\n            listeners.delete(entry.target);\n            cb();\n          }\n        }\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nfunction generateImageSources(imageVariants) {\n  return imageVariants.map(function (_ref3) {\n    var src = _ref3.src,\n        srcSet = _ref3.srcSet,\n        srcSetWebp = _ref3.srcSetWebp,\n        media = _ref3.media,\n        sizes = _ref3.sizes;\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {\n      key: src\n    }, srcSetWebp && /*#__PURE__*/_react.default.createElement(\"source\", {\n      type: \"image/webp\",\n      media: media,\n      srcSet: srcSetWebp,\n      sizes: sizes\n    }), srcSet && /*#__PURE__*/_react.default.createElement(\"source\", {\n      media: media,\n      srcSet: srcSet,\n      sizes: sizes\n    }));\n  });\n} // Return an array ordered by elements having a media prop, does not use\n// native sort, as a stable sort is not guaranteed by all browsers/versions\n\n\nfunction groupByMedia(imageVariants) {\n  var withMedia = [];\n  var without = [];\n  imageVariants.forEach(function (variant) {\n    return (variant.media ? withMedia : without).push(variant);\n  });\n\n  if (without.length > 1 && process.env.NODE_ENV !== \"production\") {\n    console.warn(\"We've found \" + without.length + \" sources without a media property. They might be ignored by the browser, see: https://www.gatsbyjs.org/packages/gatsby-image/#art-directing-multiple-images\");\n  }\n\n  return [].concat(withMedia, without);\n}\n\nfunction generateTracedSVGSources(imageVariants) {\n  return imageVariants.map(function (_ref4) {\n    var src = _ref4.src,\n        media = _ref4.media,\n        tracedSVG = _ref4.tracedSVG;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: tracedSVG\n    });\n  });\n}\n\nfunction generateBase64Sources(imageVariants) {\n  return imageVariants.map(function (_ref5) {\n    var src = _ref5.src,\n        media = _ref5.media,\n        base64 = _ref5.base64;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: base64\n    });\n  });\n}\n\nfunction generateNoscriptSource(_ref6, isWebp) {\n  var srcSet = _ref6.srcSet,\n      srcSetWebp = _ref6.srcSetWebp,\n      media = _ref6.media,\n      sizes = _ref6.sizes;\n  var src = isWebp ? srcSetWebp : srcSet;\n  var mediaAttr = media ? \"media=\\\"\" + media + \"\\\" \" : \"\";\n  var typeAttr = isWebp ? \"type='image/webp' \" : \"\";\n  var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\" \" : \"\";\n  return \"<source \" + typeAttr + mediaAttr + \"srcset=\\\"\" + src + \"\\\" \" + sizesAttr + \"/>\";\n}\n\nfunction generateNoscriptSources(imageVariants) {\n  return imageVariants.map(function (variant) {\n    return (variant.srcSetWebp ? generateNoscriptSource(variant, true) : \"\") + generateNoscriptSource(variant);\n  }).join(\"\");\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getIO();\n\n  if (observer) {\n    observer.observe(el);\n    listeners.set(el, cb);\n  }\n\n  return function () {\n    observer.unobserve(el);\n    listeners.delete(el);\n  };\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var crossOrigin = props.crossOrigin ? \"crossorigin=\\\"\" + props.crossOrigin + \"\\\" \" : \"\";\n  var loading = props.loading ? \"loading=\\\"\" + props.loading + \"\\\" \" : \"\";\n  var draggable = props.draggable ? \"draggable=\\\"\" + props.draggable + \"\\\" \" : \"\";\n  var sources = generateNoscriptSources(props.imageVariants);\n  return \"<picture>\" + sources + \"<img \" + loading + width + height + sizes + srcSet + src + alt + title + crossOrigin + draggable + \"style=\\\"position:absolute;top:0;left:0;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n}; // Earlier versions of gatsby-image during the 2.x cycle did not wrap\n// the `Img` component in a `picture` element. This maintains compatibility\n// until a breaking change can be introduced in the next major release\n\n\nvar Placeholder = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var src = props.src,\n      imageVariants = props.imageVariants,\n      generateSources = props.generateSources,\n      spreadProps = props.spreadProps,\n      ariaHidden = props.ariaHidden;\n\n  var baseImage = /*#__PURE__*/_react.default.createElement(Img, (0, _extends2.default)({\n    ref: ref,\n    src: src\n  }, spreadProps, {\n    ariaHidden: ariaHidden\n  }));\n\n  return imageVariants.length > 1 ? /*#__PURE__*/_react.default.createElement(\"picture\", null, generateSources(imageVariants), baseImage) : baseImage;\n});\n\nvar Img = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      loading = props.loading,\n      draggable = props.draggable,\n      ariaHidden = props.ariaHidden,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  return /*#__PURE__*/_react.default.createElement(\"img\", (0, _extends2.default)({\n    \"aria-hidden\": ariaHidden,\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref,\n    loading: loading,\n    draggable: draggable,\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    _this.seenBefore = isBrowser && inImageCache(props);\n    _this.isCritical = props.loading === \"eager\" || props.critical;\n    _this.addNoScript = !(_this.isCritical && !props.fadeIn);\n    _this.useIOSupport = !hasNativeLazyLoadSupport && hasIOSupport && !_this.isCritical && !_this.seenBefore;\n    var isVisible = _this.isCritical || isBrowser && (hasNativeLazyLoadSupport || !_this.useIOSupport);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: false,\n      imgCached: false,\n      fadeIn: !_this.seenBefore && props.fadeIn,\n      isHydrated: false\n    };\n    _this.imageRef = /*#__PURE__*/_react.default.createRef();\n    _this.placeholderRef = props.placeholderRef || /*#__PURE__*/_react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setState({\n      isHydrated: isBrowser\n    });\n\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.isCritical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.cleanUpListeners) {\n      this.cleanUpListeners();\n    }\n  } // Specific to IntersectionObserver based lazy-load support\n  ;\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.useIOSupport && ref) {\n      this.cleanUpListeners = listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        } // imgCached and imgLoaded must update after isVisible,\n        // Once isVisible is true, imageRef becomes accessible, which imgCached needs access to.\n        // imgLoaded and imgCached are in a 2nd setState call to be changed together,\n        // avoiding initiating unnecessary animation frames from style changes.\n\n\n        _this2.setState({\n          isVisible: true\n        }, function () {\n          _this2.setState({\n            imgLoaded: imageInCache,\n            // `currentSrc` should be a string, but can be `undefined` in IE,\n            // !! operator validates the value is not undefined/null/\"\"\n            // for lazyloaded components this might be null\n            // TODO fix imgCached behaviour as it's now false when it's lazyloaded\n            imgCached: !!(_this2.imageRef.current && _this2.imageRef.current.currentSrc)\n          });\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        durationFadeIn = _convertProps.durationFadeIn,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp,\n        loading = _convertProps.loading,\n        draggable = _convertProps.draggable;\n\n    var imageVariants = fluid || fixed; // Abort early if missing image data (#25371)\n\n    if (!imageVariants) {\n      return null;\n    }\n\n    var shouldReveal = this.state.fadeIn === false || this.state.imgLoaded;\n    var shouldFadeIn = this.state.fadeIn === true && !this.state.imgCached;\n    var imageStyle = (0, _extends2.default)({\n      opacity: shouldReveal ? 1 : 0,\n      transition: shouldFadeIn ? \"opacity \" + durationFadeIn + \"ms\" : \"none\"\n    }, imgStyle);\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var delayHideStyle = {\n      transitionDelay: durationFadeIn + \"ms\"\n    };\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1\n    }, shouldFadeIn && delayHideStyle, imgStyle, placeholderStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName,\n      itemProp: itemProp\n    }; // Initial client render state needs to match SSR until hydration finishes.\n    // Once hydration completes, render again to update to the correct image.\n    // `imageVariants` is always an Array type at this point due to `convertProps()`\n\n    var image = !this.state.isHydrated ? imageVariants[0] : getCurrentSrcData(imageVariants);\n\n    if (fluid) {\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\",\n          maxWidth: image.maxWidth ? image.maxWidth + \"px\" : null,\n          maxHeight: image.maxHeight ? image.maxHeight + \"px\" : null\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          right: 0,\n          left: 0\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateBase64Sources\n      }), image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image, {\n            imageVariants: imageVariants\n          }))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: image.width,\n        height: image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(image.srcSet)\n      }, bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          width: image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          height: image.height\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateBase64Sources\n      }), image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: image.width,\n        height: image.height,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image, {\n            imageVariants: imageVariants\n          }))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  fadeIn: true,\n  durationFadeIn: 500,\n  alt: \"\",\n  Tag: \"div\",\n  // We set it to `lazy` by default because it's best to default to a performant\n  // setting and let the user \"opt out\" to `eager`\n  loading: \"lazy\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string,\n  maxWidth: _propTypes.default.number,\n  maxHeight: _propTypes.default.number\n});\n\nfunction requireFixedOrFluid(originalPropTypes) {\n  return function (props, propName, componentName) {\n    var _PropTypes$checkPropT;\n\n    if (!props.fixed && !props.fluid) {\n      throw new Error(\"The prop `fluid` or `fixed` is marked as required in `\" + componentName + \"`, but their values are both `undefined`.\");\n    }\n\n    _propTypes.default.checkPropTypes((_PropTypes$checkPropT = {}, _PropTypes$checkPropT[propName] = originalPropTypes, _PropTypes$checkPropT), props, \"prop\", componentName);\n  };\n} // If you modify these propTypes, please don't forget to update following files as well:\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/index.d.ts\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/README.md#gatsby-image-props\n// https://github.com/gatsbyjs/gatsby/blob/master/docs/docs/gatsby-image.md#gatsby-image-props\n\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: requireFixedOrFluid(_propTypes.default.oneOfType([fixedObject, _propTypes.default.arrayOf(fixedObject)])),\n  fluid: requireFixedOrFluid(_propTypes.default.oneOfType([fluidObject, _propTypes.default.arrayOf(fluidObject)])),\n  fadeIn: _propTypes.default.bool,\n  durationFadeIn: _propTypes.default.number,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  crossOrigin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string,\n  loading: _propTypes.default.oneOf([\"auto\", \"lazy\", \"eager\"]),\n  draggable: _propTypes.default.bool\n};\nvar _default = Image;\nexports.default = _default;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport LeftNavigation from \"./lefNavigation\"\r\n\r\nconst Layout = ({ location, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header, sidebar\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query postsByTags {\r\n      allMarkdownRemark(sort: { fields: frontmatter___date, order: ASC }) {\r\n        categories: group(field: frontmatter___tags) {\r\n          name: fieldValue\r\n          posts: edges {\r\n            node {\r\n              frontmatter {\r\n                title\r\n                date\r\n              }\r\n              fields {\r\n                slug\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const postsByTags = data.allMarkdownRemark\r\n\r\n  // if (isRootPath) {\r\n  //   header = (\r\n  //     <h1 className=\"main-heading\">\r\n  //       <Link to=\"/\">{title}</Link>\r\n  //     </h1>\r\n  //   )\r\n  //   sidebar = null\r\n  // } else {\r\n  //   header = (\r\n  //     <Link className=\"header-link-home\" to=\"/\">\r\n  //       {title}\r\n  //     </Link>\r\n  //   )\r\n  //   sidebar = <LeftNavigation data={postsByTags} location={location} />\r\n  // }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">\r\n        <Link to=\"/\">Today I Learn</Link>\r\n      </header>\r\n      <div className=\"contents-wrap\">\r\n        <main>{children}</main>\r\n        <footer>\r\n          © 2021, COPYRIGHT ALL RIGHT\r\n          <a href=\"https://www.gatsbyjs.com\"></a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, meta, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata?.social?.twitter || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `google-site-verification`,\r\n          content: \"M0Wa_Sh6Ip9woLirwOec9KhuVfJmogHmiDoSA0nZEc0\",\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/main-pic.png\"\r\n        width={80}\r\n        height={80}\r\n        quality={90}\r\n        alt=\"Profile picture\"\r\n      />\r\n      <p>수영아 오늘도 공부했니</p>\r\n      {/*{author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a>\r\n        </p>\r\n      )} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"home-module--container--0aba5\";\nexport var post = \"home-module--post--e8da4\";\nexport var post_content = \"home-module--post_content--160ba\";\nexport var post_content_title = \"home-module--post_content_title--7a38a\";\nexport var post_tag = \"home-module--post_tag--05e00\";\nexport var post_tag_count = \"home-module--post_tag_count--e99db\";\nexport var post_tag_txt = \"home-module--post_tag_txt--fa041\";\nexport var postsWrap = \"home-module--postsWrap--2f1f3\";\nexport var row = \"home-module--row--87db9\";\nexport var section = \"home-module--section--91350\";\nexport var tagsWrap = \"home-module--tagsWrap--58296\";\nexport var thumbnail = \"home-module--thumbnail--49edb\";","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport * as list from \"../components/home.module.css\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst BlogMain = ({ data, location }) => {\r\n  const posts = data.posts.nodes.filter(\r\n    post => post.frontmatter.publish === true\r\n  )\r\n  console.log(\"posts\", posts)\r\n  const categories = data.categories\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location}>\r\n        <Seo title=\"All posts\" />\r\n        <Bio />\r\n        <p>블로그 글들을 확인할 수 없습니다.</p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Seo title=\"All posts\" />\r\n      <Bio />\r\n      <div className={list.tagsWrap}>\r\n        <div className={list.post_tag}>\r\n          <Link to={`/`}>\r\n            <span className={list.post_tag_txt}>전체</span>\r\n            <span className={list.post_tag_count}>{categories.totalCount}</span>\r\n          </Link>\r\n        </div>\r\n        {categories.all?.map(ctr => (\r\n          <div className={list.post_tag}>\r\n            <Link to={`/${ctr.name}`}>\r\n              <span className={list.post_tag_txt}># {ctr.name}</span>\r\n              <span className={list.post_tag_count}>{ctr.totalCount}</span>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={list.postsWrap}>\r\n        {posts?.map((post, i) => {\r\n          return (\r\n            <div key={i} className={list.post}>\r\n              <div className={list.thumbnail}>\r\n                {/* <Img fluid={post.frontmatter.image?.childImageSharp?.fluid} /> */}\r\n                <img\r\n                  src={`${post.frontmatter.image?.childImageSharp?.fluid?.src}`}\r\n                />\r\n              </div>\r\n\r\n              <div className={list.post_content}>\r\n                <span className={list.post_tag}>\r\n                  <span className={list.post_tag_txt}>\r\n                    # {`${post.frontmatter.tags?.[0] || \"\"}`}\r\n                  </span>\r\n                </span>\r\n                <p className={list.post_content_title}>\r\n                  <Link to={`${post.fields.slug}`} itemProp=\"url\">\r\n                    {post.frontmatter.title}\r\n                  </Link>\r\n                </p>\r\n                <small>{post.frontmatter.date}</small>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogMain\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogMain($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    categories: allMarkdownRemark(\r\n      sort: { fields: frontmatter___date, order: ASC }\r\n      filter: { frontmatter: { publish: { eq: true } } }\r\n    ) {\r\n      totalCount\r\n      all: group(field: frontmatter___tags) {\r\n        name: fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n    posts: allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { eq: $tag } } }\r\n    ) {\r\n      categories: group(field: frontmatter___tags) {\r\n        name: fieldValue\r\n        totalCount\r\n      }\r\n      nodes {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"YYYY-MM-DD\")\r\n          title\r\n          tags\r\n          description\r\n          publish\r\n          image {\r\n            childImageSharp {\r\n              fluid {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","_interopRequireDefault","require","io","_assertThisInitialized2","_inheritsLoose2","_objectWithoutPropertiesLoose2","_extends2","_react","_propTypes","_excluded","convertProps","props","convertedProps","default","resolutions","sizes","critical","fixed","fluid","loading","groupByMedia","concat","matchesMedia","_ref","media","isBrowser","window","matchMedia","matches","getImageCacheKey","_ref2","srcData","getCurrentSrcData","src","currentData","some","image","hasArtDirectionSupport","foundMedia","findIndex","noMedia","imageCache","create","inImageCache","cacheKey","hasNativeLazyLoadSupport","HTMLImageElement","prototype","hasIOSupport","IntersectionObserver","listeners","WeakMap","generateImageSources","imageVariants","_ref3","srcSet","srcSetWebp","createElement","Fragment","key","type","withMedia","without","forEach","variant","push","generateTracedSVGSources","_ref4","tracedSVG","generateBase64Sources","_ref5","base64","generateNoscriptSource","_ref6","isWebp","listenToIntersections","el","cb","observer","entries","entry","has","target","get","isIntersecting","intersectionRatio","unobserve","delete","rootMargin","observe","set","noscriptImg","title","alt","width","height","crossOrigin","draggable","Placeholder","forwardRef","ref","generateSources","spreadProps","ariaHidden","baseImage","Img","style","onLoad","onError","otherProps","position","top","left","objectFit","objectPosition","propTypes","object","func","Image","_React$Component","_this","call","this","seenBefore","isCritical","addNoScript","fadeIn","useIOSupport","isVisible","state","imgLoaded","imgCached","isHydrated","imageRef","createRef","placeholderRef","handleImageLoaded","bind","handleRef","_proto","componentDidMount","setState","onStartLoad","wasCached","img","current","complete","componentWillUnmount","cleanUpListeners","_this2","imageInCache","currentSrc","render","_convertProps","className","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","durationFadeIn","Tag","itemProp","shouldReveal","shouldFadeIn","imageStyle","opacity","transition","bgColor","delayHideStyle","transitionDelay","imagePlaceholderStyle","placeholderImageProps","overflow","maxWidth","maxHeight","JSON","stringify","paddingBottom","aspectRatio","bottom","right","dangerouslySetInnerHTML","__html","divStyle","display","Component","defaultProps","fixedObject","shape","number","isRequired","srcWebp","fluidObject","requireFixedOrFluid","originalPropTypes","propName","componentName","_PropTypes$checkPropT","Error","checkPropTypes","oneOfType","arrayOf","bool","oneOf","format","isLoading","isLoaded","images","shouldLoad","placeholder","layout","wrapperStyle","sources","fallbackImage","paddingTop","React","role","a","children","Sizer","t","decoding","undefined","fallback","PropTypes","Picture","displayName","_Picture$propTypes","MainImage","rest","altValidator","Set","e","as","preactClass","class","wStyle","wClass","wrapperProps","useRef","useMemo","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","querySelector","ssrImage","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","add","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","suppressHydrationWarning","memo","warn","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","location","isRootPath","__PATH_PREFIX__","pathname","useStaticQuery","allMarkdownRemark","Link","to","href","Seo","description","lang","meta","site","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","data","author","S","formats","quality","post_tag","post_tag_count","post_tag_txt","posts","nodes","post","frontmatter","publish","log","categories","list","totalCount","all","ctr","childImageSharp","tags","fields","slug","date","_extends","arguments","source","hasOwnProperty","__esModule","apply","excluded","sourceKeys","keys","indexOf"],"sourceRoot":""}