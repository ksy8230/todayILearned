{"version":3,"file":"component---src-pages-using-typescript-tsx-94b6e394b03fc5771de5.js","mappings":"kLA6CA,UAhCwD,SAAC,GAAD,IACtDA,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,KACAC,EAHsD,EAGtDA,SAHsD,OAKtD,gBAAC,IAAD,CAAQC,MAAM,mBAAmBD,SAAUA,GACzC,gBAAC,IAAD,CAAKC,MAAM,qBACX,oEACA,qEAC2C,sCAD3C,+DAE8C,yCAF9C,wEAKA,qEAC2C,wCAD3C,oBAEM,wCAFN,gBAEsC,sCAFtC,UAIA,2DACiCF,EADjC,uBAC2D,IACxDD,EAAKI,KAAKC,UAFb,KAIA,2DACkC,IAChC,qBAAGC,KAAK,6CAAR,kCAFF,KAOA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,8B,6ECuBJ,EA5De,SAAC,GAA4B,IAA1BN,EAAyB,EAAzBA,SAAUO,EAAe,EAAfA,SAEpBC,EADcC,oBACDT,EAASU,UAGfC,EAAAA,EAAAA,gBAAe,cAqBHC,kBAkBzB,OACE,uBAAKC,UAAU,iBAAiB,oBAAmBL,GACjD,0BAAQK,UAAU,iBAChB,gBAAC,EAAAR,KAAD,CAAMC,GAAG,KAAT,kBAEF,uBAAKO,UAAU,iBACb,4BAAON,GACP,4DAEE,qBAAGH,KAAK,kC,uDC7CZU,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMhB,EAAY,EAAZA,MAC9BC,GAASS,EAAAA,EAAAA,gBAAe,cAAxBT,KAgBFgB,EAAkBH,GAAeb,EAAKiB,aAAaJ,YACnDK,EAAY,UAAGlB,EAAKiB,oBAAR,aAAG,EAAmBlB,MAExC,OACE,gBAAC,IAAD,CACEoB,eAAgB,CACdL,KAAAA,GAEFf,MAAOA,EACPqB,cAAeF,EAAY,QAAWA,EAAiB,KACvDH,KAAM,CACJ,CACEM,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASvB,GAEX,CACEwB,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAtB,EAAKiB,oBAAL,mBAAmBO,cAAnB,eAA2BC,UAA3B,IAEX,CACEJ,KAAK,gBACLC,QAASvB,GAEX,CACEsB,KAAK,sBACLC,QAASN,GAEX,CACEK,KAAK,2BACLC,QAAS,gDAEXI,OAAOX,MAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  path,\r\n  location,\r\n}) => (\r\n  <Layout title=\"Using TypeScript\" location={location}>\r\n    <Seo title=\"Using TypeScript\" />\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <em>.ts/.tsx</em> files for your\r\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\r\n      (like gatsby-node.js) currently don't support TypeScript yet.\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport LeftNavigation from \"./lefNavigation\"\r\n\r\nconst Layout = ({ location, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header, sidebar\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query postsByTags {\r\n      allMarkdownRemark(sort: { fields: frontmatter___date, order: ASC }) {\r\n        categories: group(field: frontmatter___tags) {\r\n          name: fieldValue\r\n          posts: edges {\r\n            node {\r\n              frontmatter {\r\n                title\r\n                date\r\n              }\r\n              fields {\r\n                slug\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const postsByTags = data.allMarkdownRemark\r\n\r\n  // if (isRootPath) {\r\n  //   header = (\r\n  //     <h1 className=\"main-heading\">\r\n  //       <Link to=\"/\">{title}</Link>\r\n  //     </h1>\r\n  //   )\r\n  //   sidebar = null\r\n  // } else {\r\n  //   header = (\r\n  //     <Link className=\"header-link-home\" to=\"/\">\r\n  //       {title}\r\n  //     </Link>\r\n  //   )\r\n  //   sidebar = <LeftNavigation data={postsByTags} location={location} />\r\n  // }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">\r\n        <Link to=\"/\">Today I Learn</Link>\r\n      </header>\r\n      <div className=\"contents-wrap\">\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© 2021, COPYRIGHT ALL RIGHT\r\n          <a href=\"https://www.gatsbyjs.com\"></a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, meta, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata?.social?.twitter || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `google-site-verification`,\r\n          content: \"iQJt-mA0eawC3btyBDKq6-k19lbYZZgbLWt8mlPnztU\",\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n"],"names":["data","path","location","title","site","buildTime","href","Link","to","children","isRootPath","__PATH_PREFIX__","pathname","useStaticQuery","allMarkdownRemark","className","Seo","description","lang","meta","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps"],"sourceRoot":""}